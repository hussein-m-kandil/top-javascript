{"version":3,"file":"0e814a629dfd8f69e4da.odin-library.bundle.js","mappings":"MAAA,MAAMA,EAAoB,qBACpBC,EAAY,GAGlB,MAAMC,EACJC,SAAqB,EAErB,WAAAC,CAAYC,EAAOC,EAAQC,EAAYC,GACrCC,KAAKC,GAAKC,SAAST,GAAK,GACxBO,KAAKJ,MAAQA,EACbI,KAAKH,OAASA,EACdG,KAAKF,WAAaA,EAClBE,KAAKD,UAAYI,QAAQJ,EAC3B,CASA,YAAAK,CAAaL,GACc,kBAAdA,IACTC,KAAKD,UAAYA,EAErB,EAGF,GAAIM,aAAc,CAChB,MAAMC,EAAmBD,aAAaE,QAAQhB,GAC1Ce,GACFd,EAAUgB,QAAQC,KAAKC,MAAMJ,GAEjC,CA2BA,SAASK,EAAaC,EAAMC,GAE1B,MAAMC,EAAWC,SAASC,cAAc,OACxCF,EAASG,UAAY,YAErB,MAAMC,EAAYH,SACfC,cAAc,OACdG,YAAYJ,SAASK,eAAeR,EAAKhB,QAAQyB,cACpDH,EAAUD,UAAY,kBAEtB,MAAMK,EAAeP,SAASC,cAAc,OAC5CM,EAAaL,UAAY,iBACzBK,EAAaH,YAAYI,EAAwB,SAAUX,EAAKf,SAChEyB,EAAaH,YACXI,EAAwB,kBAAmBX,EAAKd,aAElD,MAAM0B,EAAeD,EACnB,OACAX,EAAKb,UAAY,MAAQ,MAE3ByB,EAAavB,GAAK,cAAgBW,EAAKX,GACvCuB,EAAaC,UAAUC,UAAUC,IAC/Bf,EAAKb,UAAY,eAAiB,eAEpCuB,EAAaH,YAAYK,GAEzB,MAAMI,EAAkBb,SAASC,cAAc,OAC/CY,EAAgBX,UAAY,oBAC5B,MAAMY,EAAmBC,EACvB,YAAclB,EAAKb,UAAY,WAAa,QAC5C,SACAa,EAAKb,UACD,4BACA,8BACJ,sBAAwBa,EAAKX,GAC7BW,EAAKX,IAEP4B,EAAiBE,iBAAiB,SAAUC,IAC1C,MAAMC,EAASD,EAAME,OAAOC,MAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAI5C,EAAU6C,OAAQD,IACpC,GAAI5C,EAAU4C,GAAGnC,KAAOgC,EAAQ,CAC9BzC,EAAU4C,GAAGhC,cAAcZ,EAAU4C,GAAGrC,WACpCP,EAAU4C,GAAGrC,UACfuC,EACEN,EAAME,OACN,mBACA,iBACA,gBACAnB,SAASwB,cAAc,eAAiBN,GAAQR,UAChD,MACA,cACA,gBAGFa,EACEN,EAAME,OACN,eACA,gBACA,iBACAnB,SAASwB,cAAc,eAAiBN,GAAQR,UAChD,KACA,eACA,eAGJ,KACF,CAEFe,EAAoBhD,EAAU,IAEhC,MAAMiD,EAAgBX,EACpB,SACA,SACA,4BACA,qBAAuBlB,EAAKX,GAC5BW,EAAKX,IAEPwC,EAAcV,iBAAiB,SAAUC,IACvC,IAAK,IAAII,EAAI,EAAGA,EAAI5C,EAAU6C,OAAQD,IACpC,GAAI5C,EAAU4C,GAAGnC,KAAO+B,EAAME,OAAOC,MAAO,CAC1C3C,EAAUkD,OAAON,EAAG,GACpB,IACErB,SACGwB,cAAc,qBACbI,YAAYX,EAAME,OAAOb,cAAcA,cAC7C,CAAE,MAAOuB,GACPC,QAAQC,IAAIF,EAAMG,QACpB,CACA,KACF,CAEFP,EAAoBhD,EAAU,IAEhCoC,EAAgBoB,OAAOnB,EAAkBY,GACzC3B,EAASkC,OAAO9B,EAAWI,EAAcM,GACzCf,EAAeoC,aAAanC,EAAUD,EAAeqC,WACvD,CAOA,SAASC,EAAoBC,GAE3B,MAAMC,EAActC,SAASC,cAAc,QAC3CqC,EAAYpC,UAAY,gBACxB,MAAOqC,EAAYC,GAAcC,EAC/B,UACA,CAAC,CAAC,MAAO,UACT,CACE,CAAC,OAAQ,QACT,CAAC,KAAM,SACP,CAAC,OAAQ,SACT,CAAC,eAAgB,MACjB,CAAC,WAAY,MAGbC,OAAOC,oBAAmBH,EAAWI,WAAY,GACrDN,EAAYlC,YACVJ,SACGC,cAAc,OACdG,YAAYmC,GACZjC,cAAcF,YAAYoC,GAAYlC,eAE3C,MAAOuC,EAAaC,GAAeL,EACjC,WACA,CAAC,CAAC,MAAO,WACT,CACE,CAAC,OAAQ,QACT,CAAC,KAAM,UACP,CAAC,OAAQ,UACT,CAAC,eAAgB,MACjB,CAAC,WAAY,MAGjBH,EAAYlC,YACVJ,SACGC,cAAc,OACdG,YAAYyC,GACZvC,cAAcF,YAAY0C,GAAaxC,eAE5C,MAAOyC,EAAeC,GAAiBP,EACrC,oBACA,CAAC,CAAC,MAAO,iBACT,CACE,CAAC,OAAQ,OACT,CAAC,KAAM,gBACP,CAAC,OAAQ,gBACT,CAAC,UAAW,gBACZ,CAAC,eAAgB,MACjB,CAAC,WAAY,MAIjBO,EAAchC,iBAAiB,WAAYC,IACrCA,EAAME,OAAO8B,SAASC,gBACxBjC,EAAME,OAAOgC,kBAAkB,kCAE/BlC,EAAME,OAAOgC,kBAAkB,GACjC,IAEFH,EAAchC,iBAAiB,SAAUC,IACnCA,EAAME,OAAOiC,iBAAmBnC,EAAME,OAAO8B,SAASI,aACxDpC,EAAME,OAAOgC,kBAAkB,GACjC,IAEFb,EAAYlC,YACVJ,SACGC,cAAc,OACdG,YAAY2C,GACZzC,cAAcF,YAAY4C,GAAe1C,eAE9C,MAAOgD,EAAgBC,GAAkBd,EACvC,2BACA,CAAC,CAAC,MAAO,eACT,CACE,CAAC,OAAQ,YACT,CAAC,KAAM,cACP,CAAC,OAAQ,gBAGbH,EAAYlC,YACVJ,SACGC,cAAc,OACdG,YAAYmD,GACZjD,cAAcF,YAAYkD,GAAgBhD,eAE/C,MAAMkD,EAAYzC,EAAa,eAAgB,SAAU,iBACzDuB,EAAYlC,YACVJ,SAASC,cAAc,OAAOG,YAAYoD,GAAWlD,eAGvD+B,EAAWjC,YAAYkC,GAEvBA,EAAYtB,iBAAiB,UAAWC,IACtCA,EAAMwC,iBACN,MAAMC,EAAezC,EAAME,OAAOwC,SAC5BC,EAAU,IAAIlF,EAClBgF,EAAoB,MAAEtC,MACtBsC,EAAqB,OAAEtC,MACvBsC,EAAa,gBAAgBtC,MAC7BsC,EAAa,cAAcG,SAE7BpF,EAAUqF,QAAQF,GAClBnC,EAAoBhD,GACpBmB,EAAagE,EAAS5D,SAASwB,cAAc,qBAC7C,IAAK,IAAIH,EAAI,EAAGA,EAAIqC,EAAapC,OAAQD,IACvCqC,EAAarC,GAAGD,MAAQ,GACK,aAAzBsC,EAAarC,GAAG0C,OAAqBL,EAAarC,GAAGwC,SAAU,GAEjE5C,EAAME,OAAOb,yBAAyBqC,mBACxC1B,EAAME,OAAOb,cAAc0D,OAC7B,GAEJ,CA4CA,SAASC,EAAcC,EAASC,GAC9B,GAAID,GAAWA,EAAQE,cACjBD,GAASE,MAAMC,QAAQH,GACzB,IAAK,IAAI9C,EAAI,EAAGA,EAAI8C,EAAM7C,OAAQD,IAC5BgD,MAAMC,QAAQH,IAA8B,IAApBA,EAAM9C,GAAGC,QACnC4C,EAAQE,aAAaD,EAAM9C,GAAG,GAAI8C,EAAM9C,GAAG,GAKrD,CASA,SAASoB,EAAoB8B,EAAWC,EAAYC,GAClD,MAAMC,EAAe1E,SAASC,cAAc,SACxCsE,GAAkC,iBAAdA,GACtBG,EAAatE,YAAYJ,SAASK,eAAekE,IAEnDN,EAAcS,EAAcF,GAC5B,MAAMG,EAAe3E,SAASC,cAAc,SAE5C,OADAgE,EAAcU,EAAcF,GACrB,CAACC,EAAcC,EACxB,CAQA,SAASC,EAAWC,EAAU3E,GAC5B,MAAM4E,EAAU9E,SAASC,cAAc,QAGvC,OAFA6E,EAAQ5E,UAAYA,GAAa,GACjC4E,EAAQ1E,YAAYJ,SAASK,eAAewE,GAAY,KACjDC,CACT,CAQA,SAAStE,EAAwBuE,EAAYC,GAC3C,MAAMC,EAAgBjF,SAASC,cAAc,OAM7C,OALAgF,EAAc/E,UAAY,kBAC1B+E,EAAc7E,YACZwE,EAAWG,EAAa,KAAM,0BAEhCE,EAAc7E,YAAYwE,EAAWI,EAAW,yBACzCC,CACT,CAcA,SAAS1D,EACP2D,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAP,EAAWQ,YAAcP,EACzBD,EAAWvE,UAAUgF,QAAQP,EAAkBC,GAC/CH,EAAWvE,UAAUgF,QAAQF,EAAsBD,GACnDF,EAAiBI,YAAcH,EAC/BD,EAAiB3E,UAAUgF,QACzBH,EACAC,EAEJ,CAWA,SAAS1E,EAAa2E,EAAa3B,EAAM7D,EAAWhB,EAAIkC,GACtD,MAAMwE,EAAS5F,SAASC,cAAc,UAMtC,OALA2F,EAAOxF,YAAYJ,SAASK,eAAeqF,IAC3CE,EAAOxB,aAAa,OAAQL,GAC5B6B,EAAO1F,UAAYA,GAAa,GAChC0F,EAAO1G,GAAKA,GAAM,GAClB0G,EAAOxE,MAAQA,GAAS,GACjBwE,CACT,CAMA,SAASnE,EAAoBoE,GAC3B,GAAIvG,aAAc,CAChB,MAAMwG,EAAcpG,KAAKqG,UAAUF,GAC/BC,EAAYxE,OAAS,SACvBhC,aAAa0G,QAAQxH,EAAmBsH,EAE5C,CACF,CArZIrH,EAAU6C,OAAS,EAErB7C,EAAUkD,OACR,EACAlD,EAAU6C,UACP7C,EAAUwH,KAAKpG,GACT,IAAInB,EAAKmB,EAAKhB,MAAOgB,EAAKf,OAAQe,EAAKd,WAAYc,EAAKb,eAKnEP,EAAUgB,KACR,IAAIf,EAAK,+BAAgC,kBAAmB,QAE9DD,EAAUgB,KAAK,IAAIf,EAAK,oBAAqB,kBAAmB,OAAO,KA4YzEsB,SAASkG,KAAK9F,YACZJ,SACGC,cAAc,MACdG,YAAYJ,SAASK,eAAe,iBAAiBC,eAGrDoC,OAAOC,kBA1KZ,WAEE,MAAMwD,EAAapF,EAAa,IAAK,SAAU,4BAC/CoF,EAAWnF,iBAAiB,SAAS,KACnChB,SAASwB,cAAc,UAAU4E,WAAW,IAE9CnC,EAAckC,EAAY,CACxB,CAAC,aAAc,gBACf,CAAC,QAAS,kBAEZnG,SAASkG,KAAK9F,YACZJ,SAASC,cAAc,OAAOG,YAAY+F,GAAY7F,eAGxD,MAAM+F,EAAarG,SAASC,cAAc,UACpCqG,EAAWvF,EAAa,IAAK,SAAU,6BAC7CkD,EAAcqC,EAAU,CACtB,CAAC,aAAc,SACf,CAAC,QAAS,WAEZD,EAAWjG,YACTJ,SAASC,cAAc,OAAOG,YAAYkG,GAAUhG,eAEtDgG,EAAStF,iBAAiB,SAAS,IACjChB,SAASwB,cAAc,UAAUwC,UAEnC5B,EAAoBiE,GACpBrG,SAASkG,KAAK9F,YAAYiG,EAC5B,CAkJEE,GAHAnE,EAAoBpC,SAASkG,MAM/B,MAAMpG,EAAiBE,SAASC,cAAc,OAI9C,IAHAH,EAAeI,UAAY,kBAC3BF,SAASkG,KAAK9F,YAAYN,GAErBuB,EAAI5C,EAAU6C,OAAS,EAAGD,GAAK,EAAGA,IACrCzB,EAAanB,EAAU4C,GAAIvB,E","sources":["webpack://top-javascript-study/./odin-library/assets/js/main.js"],"sourcesContent":["const LOCAL_STORAGE_KEY = \"odin-library-books\";\nconst myLibrary = [];\n\n// Book constructor\nclass Book {\n  static #booksCount = 0;\n\n  constructor(title, author, numOfPages, readState) {\n    this.id = String(++Book.#booksCount);\n    this.title = title;\n    this.author = author;\n    this.numOfPages = numOfPages;\n    this.readState = Boolean(readState);\n  }\n\n  /**\n   * A setter for readState property\n   *\n   * @param {boolean} readState\n   *\n   * @returns {void}\n   */\n  setReadState(readState) {\n    if (typeof readState === \"boolean\") {\n      this.readState = readState;\n    }\n  }\n}\n\nif (localStorage) {\n  const odinLibraryBooks = localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (odinLibraryBooks) {\n    myLibrary.push(...JSON.parse(odinLibraryBooks));\n  }\n}\n\nif (myLibrary.length > 0) {\n  // Re-instantiate books comes from localStorage from 'Book' class\n  myLibrary.splice(\n    0,\n    myLibrary.length,\n    ...myLibrary.map((book) => {\n      return new Book(book.title, book.author, book.numOfPages, book.readState);\n    })\n  );\n} else {\n  // Fill the library with some dummy books if not filled\n  myLibrary.push(\n    new Book(\"Murder On The Orient Express\", \"Agatha Christie\", \"256\")\n  );\n  myLibrary.push(new Book(\"Death on the Nile\", \"Agatha Christie\", \"288\", true));\n}\n\n// MAIN FUNCTIONS\n\n/**\n * Adds book card to the given books' container using the given book's data.\n * @param {Book} book\n * @param {HTMLDivElement} booksContainer\n * @returns {void}\n */\nfunction addBookToDOM(book, booksContainer) {\n  // Book card\n  const bookCard = document.createElement(\"div\");\n  bookCard.className = \"book-card\";\n  // Book card title\n  const bookTitle = document\n    .createElement(\"div\")\n    .appendChild(document.createTextNode(book.title)).parentElement;\n  bookTitle.className = \"book-card-title\";\n  // Book card body\n  const bookCardBody = document.createElement(\"div\");\n  bookCardBody.className = \"book-card-body\";\n  bookCardBody.appendChild(createBookCardBodyEntry(\"Author\", book.author));\n  bookCardBody.appendChild(\n    createBookCardBodyEntry(\"Number of Pages\", book.numOfPages)\n  );\n  const readStateDiv = createBookCardBodyEntry(\n    \"Read\",\n    book.readState ? \"Yes\" : \"No\"\n  );\n  readStateDiv.id = \"read-state-\" + book.id;\n  readStateDiv.lastChild.classList.add(\n    book.readState ? \"success-text\" : \"danger-text\"\n  );\n  bookCardBody.appendChild(readStateDiv);\n  // Book card buttons\n  const bookCardButtons = document.createElement(\"div\");\n  bookCardButtons.className = \"book-card-buttons\";\n  const bookReadStateBtn = createButton(\n    \"Mark as \" + (book.readState ? \"not read\" : \"read\"),\n    \"button\",\n    book.readState\n      ? \"danger-border danger-text\"\n      : \"success-border success-text\",\n    \"read-state-toggler-\" + book.id,\n    book.id\n  );\n  bookReadStateBtn.addEventListener(\"click\", (event) => {\n    const bookId = event.target.value;\n    for (let i = 0; i < myLibrary.length; i++) {\n      if (myLibrary[i].id === bookId) {\n        myLibrary[i].setReadState(!myLibrary[i].readState);\n        if (myLibrary[i].readState) {\n          readStateToggler(\n            event.target,\n            \"Mark as not read\",\n            \"success-border\",\n            \"danger-border\",\n            document.querySelector(\"#read-state-\" + bookId).lastChild,\n            \"Yes\",\n            \"danger-text\",\n            \"success-text\"\n          );\n        } else {\n          readStateToggler(\n            event.target,\n            \"Mark as read\",\n            \"danger-border\",\n            \"success-border\",\n            document.querySelector(\"#read-state-\" + bookId).lastChild,\n            \"No\",\n            \"success-text\",\n            \"danger-text\"\n          );\n        }\n        break;\n      }\n    }\n    storeOnLocalStorage(myLibrary);\n  });\n  const bookDeleteBtn = createButton(\n    \"Delete\",\n    \"button\",\n    \"danger-text danger-border\",\n    \"book-card-del-btn-\" + book.id,\n    book.id\n  );\n  bookDeleteBtn.addEventListener(\"click\", (event) => {\n    for (let i = 0; i < myLibrary.length; i++) {\n      if (myLibrary[i].id === event.target.value) {\n        myLibrary.splice(i, 1);\n        try {\n          document\n            .querySelector(\".books-container\")\n            ?.removeChild(event.target.parentElement.parentElement);\n        } catch (error) {\n          console.log(error.message);\n        }\n        break;\n      }\n    }\n    storeOnLocalStorage(myLibrary);\n  });\n  bookCardButtons.append(bookReadStateBtn, bookDeleteBtn);\n  bookCard.append(bookTitle, bookCardBody, bookCardButtons);\n  booksContainer.insertBefore(bookCard, booksContainer.firstChild);\n}\n\n/**\n * Adds a 'form' element for adding new book in the given parent node.\n * @param {Node} parentNode - Paren node to append the form to it.\n * @returns {void}\n */\nfunction addNewBookFormToDOM(parentNode) {\n  // Create the form\n  const newBookForm = document.createElement(\"form\");\n  newBookForm.className = \"new-book-form\";\n  const [titleLabel, titleInput] = createLabelAndInput(\n    \"Title: \",\n    [[\"for\", \"title\"]],\n    [\n      [\"type\", \"text\"],\n      [\"id\", \"title\"],\n      [\"name\", \"title\"],\n      [\"autocomplete\", \"on\"],\n      [\"required\", \"\"],\n    ]\n  );\n  if (window.HTMLDialogElement) titleInput.autofocus = true;\n  newBookForm.appendChild(\n    document\n      .createElement(\"div\")\n      .appendChild(titleLabel)\n      .parentElement.appendChild(titleInput).parentElement\n  );\n  const [authorLabel, authorInput] = createLabelAndInput(\n    \"Author: \",\n    [[\"for\", \"author\"]],\n    [\n      [\"type\", \"text\"],\n      [\"id\", \"author\"],\n      [\"name\", \"author\"],\n      [\"autocomplete\", \"on\"],\n      [\"required\", \"\"],\n    ]\n  );\n  newBookForm.appendChild(\n    document\n      .createElement(\"div\")\n      .appendChild(authorLabel)\n      .parentElement.appendChild(authorInput).parentElement\n  );\n  const [pagesNumLabel, pagesNumInput] = createLabelAndInput(\n    \"Number of Pages: \",\n    [[\"for\", \"pages-number\"]],\n    [\n      [\"type\", \"tel\"],\n      [\"id\", \"pages-number\"],\n      [\"name\", \"pages-number\"],\n      [\"pattern\", \"^[0-9]{1,7}$\"],\n      [\"autocomplete\", \"on\"],\n      [\"required\", \"\"],\n    ]\n  );\n  // Number validation\n  pagesNumInput.addEventListener(\"invalid\", (event) => {\n    if (event.target.validity.patternMismatch) {\n      event.target.setCustomValidity(\"Numbers only are allowed here.\");\n    } else {\n      event.target.setCustomValidity(\"\");\n    }\n  });\n  pagesNumInput.addEventListener(\"input\", (event) => {\n    if (event.target.checkValidity() && event.target.validity.customError) {\n      event.target.setCustomValidity(\"\");\n    }\n  });\n  newBookForm.appendChild(\n    document\n      .createElement(\"div\")\n      .appendChild(pagesNumLabel)\n      .parentElement.appendChild(pagesNumInput).parentElement\n  );\n  const [readStateLabel, readStateInput] = createLabelAndInput(\n    \" Did you read this book?\",\n    [[\"for\", \"read-state\"]],\n    [\n      [\"type\", \"checkbox\"],\n      [\"id\", \"read-state\"],\n      [\"name\", \"read-state\"],\n    ]\n  );\n  newBookForm.appendChild(\n    document\n      .createElement(\"div\")\n      .appendChild(readStateInput)\n      .parentElement.appendChild(readStateLabel).parentElement\n  );\n  const submitBtn = createButton(\"Add New Book\", \"submit\", \"success-color\");\n  newBookForm.appendChild(\n    document.createElement(\"div\").appendChild(submitBtn).parentElement\n  );\n  // Add the form to DOM\n  parentNode.appendChild(newBookForm);\n  // Handle form submission\n  newBookForm.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n    const formElements = event.target.elements;\n    const newBook = new Book(\n      formElements[\"title\"].value,\n      formElements[\"author\"].value,\n      formElements[\"pages-number\"].value,\n      formElements[\"read-state\"].checked\n    );\n    myLibrary.unshift(newBook);\n    storeOnLocalStorage(myLibrary);\n    addBookToDOM(newBook, document.querySelector(\".books-container\"));\n    for (let i = 0; i < formElements.length; i++) {\n      formElements[i].value = \"\";\n      if (formElements[i].type === \"checkbox\") formElements[i].checked = false;\n    }\n    if (event.target.parentElement instanceof HTMLDialogElement) {\n      event.target.parentElement.close(); // Close the dialog if any\n    }\n  });\n}\n\n/**\n * Adds, to 'body' element, a new 'dialog' with a 'form' for adding a new book.\n * @returns {void}\n */\nfunction addNewBookDialogToDOM() {\n  // Button to show the dialog\n  const newBookBtn = createButton(\"+\", \"button\", \"new-book-dialog-show-btn\");\n  newBookBtn.addEventListener(\"click\", () => {\n    document.querySelector(\"dialog\").showModal();\n  });\n  setAttributes(newBookBtn, [\n    [\"aria-label\", \"Add new book\"],\n    [\"title\", \"Add new book\"],\n  ]); // For better accessibility\n  document.body.appendChild(\n    document.createElement(\"div\").appendChild(newBookBtn).parentElement\n  );\n  // New book dialog\n  const formDialog = document.createElement(\"dialog\");\n  const closeBtn = createButton(\"x\", \"button\", \"new-book-dialog-close-btn\");\n  setAttributes(closeBtn, [\n    [\"aria-label\", \"Close\"],\n    [\"title\", \"Close\"],\n  ]); // For better accessibility\n  formDialog.appendChild(\n    document.createElement(\"div\").appendChild(closeBtn).parentElement\n  );\n  closeBtn.addEventListener(\"click\", () =>\n    document.querySelector(\"dialog\").close()\n  );\n  addNewBookFormToDOM(formDialog); // Add new-book form to the dialog\n  document.body.appendChild(formDialog);\n}\n\n// HELPER FUNCTIONS\n\n/**\n * Sets multiple attributes on element (mutate the element) at once.\n * @param {HTMLElement} element - HTML Element to set attributes on.\n * @param {[string, string][]} attrs - Attributes with its values as a list of string pairs.\n * @returns {void}\n */\nfunction setAttributes(element, attrs) {\n  if (element && element.setAttribute) {\n    if (attrs && Array.isArray(attrs)) {\n      for (let i = 0; i < attrs.length; i++) {\n        if (Array.isArray(attrs) && attrs[i].length === 2) {\n          element.setAttribute(attrs[i][0], attrs[i][1]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Creates input with its label.\n * @param {string} [labelText] - Text for the label.\n * @param {[string, string][]} [labelAttrs] - Attributes for label as list of string pairs.\n * @param {[string, string][]} [inputAttrs] - Attributes for input as list of string pairs.\n * @returns {[HTMLLabelElement, HTMLInputElement]}\n */\nfunction createLabelAndInput(labelText, labelAttrs, inputAttrs) {\n  const labelElement = document.createElement(\"label\");\n  if (labelText && typeof labelText === \"string\") {\n    labelElement.appendChild(document.createTextNode(labelText));\n  }\n  setAttributes(labelElement, labelAttrs);\n  const inputElement = document.createElement(\"input\");\n  setAttributes(inputElement, inputAttrs);\n  return [labelElement, inputElement];\n}\n\n/**\n * Creates a span with its textContent & its className.\n * @param {string} spanText\n * @param {string} className\n * @returns {HTMLSpanElement}\n */\nfunction createSpan(spanText, className) {\n  const newSpan = document.createElement(\"span\");\n  newSpan.className = className ?? \"\";\n  newSpan.appendChild(document.createTextNode(spanText ?? \"\"));\n  return newSpan;\n}\n\n/**\n * Creates an entry for book-card's body.\n * @param {string} entryTitle\n * @param {string} entryData\n * @returns {HTMLDivElement}\n */\nfunction createBookCardBodyEntry(entryTitle, entryData) {\n  const bookCardEntry = document.createElement(\"div\");\n  bookCardEntry.className = \"book-card-entry\";\n  bookCardEntry.appendChild(\n    createSpan(entryTitle + \": \", \"book-card-entry-title\")\n  );\n  bookCardEntry.appendChild(createSpan(entryData, \"book-card-entry-data\"));\n  return bookCardEntry;\n}\n\n/**\n * Toggles book's read state.\n * @param {HTMLButtonElement} togglerBtn\n * @param {string} togglerText\n * @param {string} fromTogglerClass\n * @param {string} toTogglerClass\n * @param {HTMLSpanElement} readStateElement\n * @param {string} readStateElementText\n * @param {string} fromReadStateTextClass\n * @param {string} toReadStateTextClass\n * @returns {void}\n */\nfunction readStateToggler(\n  togglerBtn,\n  togglerText,\n  fromTogglerClass,\n  toTogglerClass,\n  readStateElement,\n  readStateElementText,\n  fromReadStateTextClass,\n  toReadStateTextClass\n) {\n  togglerBtn.textContent = togglerText;\n  togglerBtn.classList.replace(fromTogglerClass, toTogglerClass);\n  togglerBtn.classList.replace(toReadStateTextClass, fromReadStateTextClass);\n  readStateElement.textContent = readStateElementText;\n  readStateElement.classList.replace(\n    fromReadStateTextClass,\n    toReadStateTextClass\n  );\n}\n\n/**\n * Creates a button with its textContent & type, class, id and value attributes.\n * @param {string} textContent\n * @param {string} type\n * @param {string} className - String of spaces-separated class list.\n * @param {string} id\n * @param {string} value\n * @returns {HTMLButtonElement}\n */\nfunction createButton(textContent, type, className, id, value) {\n  const button = document.createElement(\"button\");\n  button.appendChild(document.createTextNode(textContent));\n  button.setAttribute(\"type\", type);\n  button.className = className ?? \"\";\n  button.id = id ?? \"\";\n  button.value = value ?? \"\";\n  return button;\n}\n\n/**\n * Stores the library's array on the locale Storage.\n * @param {Book[]} data - The library.\n */\nfunction storeOnLocalStorage(data) {\n  if (localStorage) {\n    const JSONDataStr = JSON.stringify(data);\n    if (JSONDataStr.length < 3 * 1024 * 1024) {\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSONDataStr);\n    }\n  }\n}\n\n// MAIN CODE\n\n// Add header\ndocument.body.appendChild(\n  document\n    .createElement(\"h1\")\n    .appendChild(document.createTextNode(\"Odin Library\")).parentElement\n);\n// Add new-book form' to the DOM\nif (!window.HTMLDialogElement) {\n  addNewBookFormToDOM(document.body); // Only if no modal support\n} else {\n  // If modal support create new-book button and modal, then add form to modal\n  addNewBookDialogToDOM();\n}\n// Create and add books container\nconst booksContainer = document.createElement(\"div\");\nbooksContainer.className = \"books-container\";\ndocument.body.appendChild(booksContainer);\n// Add book to the DOM\nfor (i = myLibrary.length - 1; i >= 0; i--) {\n  addBookToDOM(myLibrary[i], booksContainer);\n}\n"],"names":["LOCAL_STORAGE_KEY","myLibrary","Book","static","constructor","title","author","numOfPages","readState","this","id","String","Boolean","setReadState","localStorage","odinLibraryBooks","getItem","push","JSON","parse","addBookToDOM","book","booksContainer","bookCard","document","createElement","className","bookTitle","appendChild","createTextNode","parentElement","bookCardBody","createBookCardBodyEntry","readStateDiv","lastChild","classList","add","bookCardButtons","bookReadStateBtn","createButton","addEventListener","event","bookId","target","value","i","length","readStateToggler","querySelector","storeOnLocalStorage","bookDeleteBtn","splice","removeChild","error","console","log","message","append","insertBefore","firstChild","addNewBookFormToDOM","parentNode","newBookForm","titleLabel","titleInput","createLabelAndInput","window","HTMLDialogElement","autofocus","authorLabel","authorInput","pagesNumLabel","pagesNumInput","validity","patternMismatch","setCustomValidity","checkValidity","customError","readStateLabel","readStateInput","submitBtn","preventDefault","formElements","elements","newBook","checked","unshift","type","close","setAttributes","element","attrs","setAttribute","Array","isArray","labelText","labelAttrs","inputAttrs","labelElement","inputElement","createSpan","spanText","newSpan","entryTitle","entryData","bookCardEntry","togglerBtn","togglerText","fromTogglerClass","toTogglerClass","readStateElement","readStateElementText","fromReadStateTextClass","toReadStateTextClass","textContent","replace","button","data","JSONDataStr","stringify","setItem","map","body","newBookBtn","showModal","formDialog","closeBtn","addNewBookDialogToDOM"],"sourceRoot":""}