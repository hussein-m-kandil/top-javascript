{"version":3,"file":"odin-knights-travails.ac176bac68a2bf088c98.bundle.js","mappings":"yBAUe,SAASA,EACtBC,EACAC,EACAC,GAEA,QAAAC,EAAAC,UAAAC,OADGC,EAAK,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAALF,EAAKE,EAAA,GAAAJ,UAAAI,GAER,GAAuB,iBAAZR,EACT,MAAMS,UAAU,uCAElB,IAAMC,EAAUC,SAASZ,cAAcC,GAWvC,GAVIC,IAAWS,EAAQT,UAAYA,GAC/BC,IAAaQ,EAAQR,YAAcA,GAGpB,IAAjBI,EAAMD,QACNE,MAAMK,QAAQN,EAAM,KACpBC,MAAMK,QAAQN,EAAM,GAAG,MAEvBA,EAAQA,EAAMO,KAAK,IAEjBP,EAAMD,OAAS,EACjB,IAAK,IAAIS,EAAI,EAAGA,EAAIR,EAAMD,OAAQS,IAAK,CACrC,IACEP,MAAMK,QAAQN,EAAMQ,KACA,IAApBR,EAAMQ,GAAGT,SACTC,EAAMQ,GAAG,IACc,iBAAhBR,EAAMQ,GAAG,GAMhB,MAAML,UACJ,4EALEH,EAAMQ,GAAG,IAAsB,IAAhBR,EAAMQ,GAAG,IAA4B,KAAhBR,EAAMQ,GAAG,KAC/CJ,EAAQK,aAAaT,EAAMQ,GAAG,GAAIR,EAAMQ,GAAG,GAOjD,CAEF,OAAOJ,CACT,CCpCA,IATA,IAAMM,EAAOjB,EAAc,KAAM,OAAQ,yBAEnCkB,EAAelB,EACnB,IACA,eACA,qGAGImB,EAAanB,EAAc,MAAO,eAC/Be,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAMK,EAAMpB,EAAc,MAAO,OACxBqB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMC,EAAStB,EAAc,MAAO,UACpCoB,EAAIG,OAAOD,EACb,CACAH,EAAWI,OAAOH,EACpB,CAEAR,SAASY,KAAKD,OAAON,EAAMC,EAAcC,E","sources":["webpack://top-javascript-study/./odin-knights-travails/helpers/createElement.js","webpack://top-javascript-study/./odin-knights-travails/index.js"],"sourcesContent":["/**\n * Creates HTMLElement of the given 'tagName' with any of the given\n * className, id or attributes\n * @param {string} tagName\n * @param {string?} className\n * @param {string?} textContent\n * @param {Array<string, string>?} attrs\n * - Any number of attributes (each of which as a key-value pair)\n * @returns {HTMLElement}\n */\nexport default function createElement(\n  tagName,\n  className,\n  textContent,\n  ...attrs\n) {\n  if (typeof tagName !== 'string') {\n    throw TypeError(\"Missing 'tagName' of type 'string'!\");\n  }\n  const element = document.createElement(tagName);\n  if (className) element.className = className;\n  if (textContent) element.textContent = textContent;\n  // Flatten attrs 1 level depth (in case attrs is in the form of an Array of paris)\n  if (\n    attrs.length === 1 &&\n    Array.isArray(attrs[0]) &&\n    Array.isArray(attrs[0][0])\n  ) {\n    attrs = attrs.flat(1);\n  }\n  if (attrs.length > 0) {\n    for (let i = 0; i < attrs.length; i++) {\n      if (\n        Array.isArray(attrs[i]) &&\n        attrs[i].length === 2 &&\n        attrs[i][0] &&\n        typeof attrs[i][0] === 'string'\n      ) {\n        if (attrs[i][1] || attrs[i][1] === 0 || attrs[i][1] === '') {\n          element.setAttribute(attrs[i][0], attrs[i][1]);\n        }\n      } else {\n        throw TypeError(\n          \"A given attribute in '...attrs' must be in the form of [string, string]\",\n        );\n      }\n    }\n  }\n  return element;\n}\n\nexport { createElement };\n","import './index.css';\nimport { createElement } from './helpers/createElement';\nimport { knightMoves } from './knight-moves';\n\nconst head = createElement('h1', 'head', 'Odin Knights Travails');\n\nconst instructions = createElement(\n  'p',\n  'instructions',\n  'Click on any square and the Knight should move to it through one of the shortest possible routes.',\n);\n\nconst chessBoard = createElement('div', 'chess-board');\nfor (let i = 0; i < 8; i++) {\n  const row = createElement('div', 'row');\n  for (let j = 0; j < 8; j++) {\n    const square = createElement('div', 'square');\n    row.append(square);\n  }\n  chessBoard.append(row);\n}\n\ndocument.body.append(head, instructions, chessBoard);\n"],"names":["createElement","tagName","className","textContent","_len","arguments","length","attrs","Array","_key","TypeError","element","document","isArray","flat","i","setAttribute","head","instructions","chessBoard","row","j","square","append","body"],"sourceRoot":""}