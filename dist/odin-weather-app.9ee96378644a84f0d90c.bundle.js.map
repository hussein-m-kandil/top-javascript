{"version":3,"file":"odin-weather-app.9ee96378644a84f0d90c.bundle.js","mappings":"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","sources":["webpack://top-javascript-study/./odin-weather-app/helpers/createElement.js","webpack://top-javascript-study/./odin-weather-app/components/CurrentWeather/index.js","webpack://top-javascript-study/./odin-weather-app/helpers/showWeatherData.js","webpack://top-javascript-study/./odin-weather-app/index.js","webpack://top-javascript-study/./odin-weather-app/components/LocationForm/index.js","webpack://top-javascript-study/./odin-weather-app/helpers/getWeatherData.js","webpack://top-javascript-study/./odin-weather-app/components/Toggler/index.js"],"sourcesContent":["/**\n * Creates HTMLElement of the given 'tagName' with any of the given\n * className, id or attributes\n * @param {string} tagName\n * @param {string?} className\n * @param {string?} textContent\n * @param {Array<string, string>?} attrs\n * - Any number of attributes (each of which as a key-value pair)\n * @returns {HTMLElement}\n */\nexport default function createElement(\n  tagName,\n  className,\n  textContent,\n  ...attrs\n) {\n  if (typeof tagName !== 'string') {\n    throw TypeError(\"Missing 'tagName' of type 'string'!\");\n  }\n  const element = document.createElement(tagName);\n  if (className) element.className = className;\n  if (textContent) element.textContent = textContent;\n  // Flatten attrs 1 level depth (in case attrs is in the form of an Array of paris)\n  if (\n    attrs.length === 1 &&\n    Array.isArray(attrs[0]) &&\n    Array.isArray(attrs[0][0])\n  ) {\n    attrs = attrs.flat(1);\n  }\n  if (attrs.length > 0) {\n    for (let i = 0; i < attrs.length; i++) {\n      if (\n        Array.isArray(attrs[i]) &&\n        attrs[i].length === 2 &&\n        attrs[i][0] &&\n        typeof attrs[i][0] === 'string'\n      ) {\n        if (attrs[i][1] || attrs[i][1] === 0 || attrs[i][1] === '') {\n          element.setAttribute(attrs[i][0], attrs[i][1]);\n        }\n      } else {\n        throw TypeError(\n          \"A given attribute in '...attrs' must be in the form of [string, string]\",\n        );\n      }\n    }\n  }\n  return element;\n}\n\nexport { createElement };\n","import './index.css';\n\nimport createElement from '../../helpers/createElement';\n\nfunction createCard(title, content, className) {\n  const card = createElement('div', `card ${className}`);\n  card.append(\n    createElement('div', 'title', title),\n    createElement('div', 'content', content),\n  );\n  return card;\n}\n\nexport default function CurrentWeather(weatherData, weatherUnit) {\n  let cTemp, feel, hTemp, lTemp;\n\n  if (weatherUnit.toLowerCase() === 'celsius') {\n    feel = weatherData.current.feelslike_c;\n    cTemp = weatherData.current.temp_c;\n    hTemp = weatherData.forecast.forecastday[0].day.maxtemp_c;\n    lTemp = weatherData.forecast.forecastday[0].day.mintemp_c;\n  } else {\n    cTemp = weatherData.current.temp_f;\n    feel = weatherData.current.feelslike_f;\n    hTemp = weatherData.forecast.forecastday[0].day.maxtemp_f;\n    lTemp = weatherData.forecast.forecastday[0].day.mintemp_f;\n  }\n\n  const currentWeather = createElement('div', 'current-weather');\n  const hero = createElement('div', 'weather-hero');\n  const extras = createElement('div', 'weather-extras');\n\n  hero.append(\n    createElement('div', 'current-temp', `${cTemp}°`),\n    createElement('div', 'condition', `${weatherData.current.condition.text}`),\n    createElement('span', 'feels-like', ` Feels like ${feel}°`),\n  );\n  extras.append(\n    createCard('High', `${hTemp}°`, 'high-temp'),\n    createCard('Low', `${lTemp}°`, 'low-temp'),\n    createCard('Humidity', `${weatherData.current.humidity}%`, 'humidity'),\n  );\n  currentWeather.append(hero, extras);\n\n  return currentWeather;\n}\n\nexport { CurrentWeather };\n","import CurrentWeather from '../components/CurrentWeather';\n\nexport default function showWeatherData(\n  containerClassName,\n  weatherData,\n  weatherUnit,\n) {\n  const locationInput = document.querySelector('input.location');\n  if (locationInput) {\n    locationInput.value = weatherData.location.name;\n  }\n\n  const contentDiv = document.querySelector(`.${containerClassName}`);\n  if (contentDiv) {\n    [...contentDiv.children].forEach((child) => child.remove());\n    contentDiv.append(CurrentWeather(weatherData, weatherUnit));\n  }\n}\n\nexport { showWeatherData };\n","import './index.css';\n\nimport createElement from './helpers/createElement';\nimport getWeatherData from './helpers/getWeatherData';\nimport showWeatherData from './helpers/showWeatherData';\nimport LocationForm from './components/LocationForm';\nimport Toggler from './components/Toggler';\n\nconst WEATHER_CONTENT_CLASS = 'weather-content';\nconst WEATHER_UNITS = ['Celsius', 'Fahrenheit'];\nlet currentWeatherUnit = WEATHER_UNITS[0];\nlet currentWeatherData = null;\n\nconst appTitle = createElement('h1', 'app-title', 'Odin Weather App');\n\nconst locationForm = LocationForm((location) =>\n  getWeatherData(location)\n    .then((weatherData) => {\n      console.dir(weatherData);\n      currentWeatherData = weatherData;\n      showWeatherData(\n        WEATHER_CONTENT_CLASS,\n        currentWeatherData,\n        currentWeatherUnit,\n      );\n    })\n    .catch(() => {\n      const contentDiv = document.querySelector(`.${WEATHER_CONTENT_CLASS}`);\n      if (contentDiv) {\n        [...contentDiv.children].forEach((child) => child.remove());\n        contentDiv.append(\n          createElement(\n            'div',\n            'weather-info-error',\n            \"No weather info! check the location's name and try again.\",\n          ),\n        );\n      }\n    }),\n);\n\nconst toggler = Toggler(WEATHER_UNITS, ({ value }) => {\n  currentWeatherUnit = value;\n  if (currentWeatherData) {\n    showWeatherData(\n      WEATHER_CONTENT_CLASS,\n      currentWeatherData,\n      currentWeatherUnit,\n    );\n  }\n});\n\nconst weatherContent = createElement('div', WEATHER_CONTENT_CLASS);\n\nconst footer = createElement('footer', 'link-back');\nconst backgroundCredits = createElement('div', 'bg-credits');\nconst weatherAPICredits = createElement('div', 'weather-api-credits');\nbackgroundCredits.append(\n  document.createTextNode('Background image by '),\n  createElement('a', 'bg-image-owner', ' 12019', [\n    'href',\n    'https://pixabay.com/users/12019-12019/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1985027',\n  ]),\n  document.createTextNode(' from '),\n  createElement('a', 'bg-image-site', ' Pixabay', [\n    'href',\n    'https://pixabay.com/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1985027',\n  ]),\n);\nweatherAPICredits.append(\n  document.createTextNode('Powered by '),\n  createElement(\n    'a',\n    'weather-api',\n    ' WeatherAPI.com',\n    ['href', 'https://www.weatherapi.com/'],\n    ['title', 'Weather API'],\n  ),\n);\nfooter.append(backgroundCredits, weatherAPICredits);\n\ndocument.body.append(appTitle, locationForm, toggler, weatherContent, footer);\n","import './index.css';\n\nimport { createElement } from '../../helpers/createElement';\n\n/**\n * A Form to get the location for the user\n * @param {function} submitCallback - A function that accepts 'location': 'string'\n * @returns {HTMLFormElement}\n */\nexport default function LocationForm(submitCallback) {\n  const form = createElement('form', 'weather-location');\n  const input = createElement(\n    'input',\n    'location',\n    '',\n    ['type', 'text'],\n    ['name', 'location'],\n    ['placeholder', 'Location (e.g. \"Cairo\")'],\n    ['autocomplete', 'off'],\n    ['autofocus', ''],\n  );\n  const button = createElement(\n    'button',\n    'location',\n    '',\n    ['type', 'submit'],\n    ['aria-label', 'Get weather'],\n  );\n  const span = createElement('span', 'ui-only', '🔍', ['aria-hidden', 'true']);\n  const errorDiv = createElement('div', 'error');\n\n  button.appendChild(span);\n  form.append(errorDiv, input, button);\n\n  form.addEventListener('submit', (event) => {\n    event.preventDefault();\n    form.classList.add('invalid');\n    const location = form['location'].value;\n    if (location) {\n      if (/^[\\w-\\s'\"]+$/.test(location)) {\n        errorDiv.textContent = '';\n        form.classList.remove('invalid');\n        submitCallback(location);\n      } else {\n        errorDiv.textContent = '* Invalid location name!';\n      }\n    } else {\n      errorDiv.textContent = '* Location is required!';\n    }\n  });\n\n  return form;\n}\n\nexport { LocationForm };\n","const BASE_URL = 'https://api.weatherapi.com/v1';\nconst FORECAST_API = '/forecast.json';\nconst SECO_SECO = '646f26dea5ab4974bc3120515240604';\n\nasync function fetchWeatherData(location) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}${FORECAST_API}?key=${SECO_SECO}&q=${location}`,\n      {\n        mode: 'cors',\n      },\n    );\n    if (response.ok) {\n      return await response.json();\n    }\n    throw Error('Fetched response in not ok!');\n  } catch (error) {\n    console.log(`${error.name} in 'getWeatherData': \\n\\t${error.message}`);\n  }\n  return null;\n}\n\nexport default function getWeatherData(location) {\n  return new Promise((resolve, reject) => {\n    fetchWeatherData(location).then((weatherData) => {\n      if (weatherData) {\n        resolve(weatherData);\n      } else {\n        reject(Error('There is no weather data!'));\n      }\n    });\n  });\n}\n\nexport { getWeatherData };\n","import './index.css';\n\nimport createElement from '../../helpers/createElement';\n\n/**\n * A button that toggles between values\n *\n * @param {string[]} values - An array of values to toggle between them\n * @param {function} toggleCallback - A function  to be called on toggle\n *\n * NOTE: 'toggleCallback' must accepts an object i.e. { index: number, value: string }\n * - index: the index of the current value in the values array.\n * - value: the current value of the button\n *\n * @returns {HTMLButtonElement} - The toggler\n */\nexport default function Toggler(values, toggleCallback) {\n  if (!toggleCallback)\n    throw Error(\"Missing argument: 'toggleCallback' type 'function'\");\n  if (!values) throw Error(\"Missing argument: 'values' type 'string[]'\");\n  if (!Array.isArray(values) || values.length < 1) {\n    throw TypeError(\n      \"Invalid argument: 'values' must be non-empty array of strings\",\n    );\n  }\n\n  const toggler = createElement('div', 'toggler', null, [\n    'aria-label',\n    'Unit Toggler',\n  ]);\n  for (let i = 0; i < values.length; i++) {\n    const choice = createElement(\n      'button',\n      `toggler-choice${i === 0 ? ' toggler-choice-selected' : ''}`,\n      values[i],\n      ['type', 'button'],\n    );\n    choice.addEventListener('click', () => {\n      toggleCallback({\n        index: i,\n        value: values[i],\n      });\n      [...toggler.children].forEach((child) =>\n        child.classList.remove('toggler-choice-selected'),\n      );\n      choice.classList.add('toggler-choice-selected');\n    });\n    toggler.append(choice);\n  }\n\n  return toggler;\n}\n\nexport { Toggler };\n"],"names":["createElement","tagName","className","textContent","_len","arguments","length","attrs","Array","_key","TypeError","element","document","isArray","flat","i","setAttribute","createCard","title","content","card","append","showWeatherData","containerClassName","weatherData","weatherUnit","locationInput","querySelector","value","location","name","contentDiv","children","forEach","child","remove","cTemp","feel","hTemp","lTemp","toLowerCase","current","feelslike_c","temp_c","forecast","forecastday","day","maxtemp_c","mintemp_c","temp_f","feelslike_f","maxtemp_f","mintemp_f","currentWeather","hero","extras","condition","text","humidity","CurrentWeather","WEATHER_CONTENT_CLASS","WEATHER_UNITS","currentWeatherUnit","currentWeatherData","appTitle","locationForm","submitCallback","form","input","button","span","errorDiv","appendChild","addEventListener","event","preventDefault","classList","add","test","Promise","resolve","reject","async","response","fetch","mode","ok","json","Error","error","console","log","message","fetchWeatherData","then","getWeatherData","dir","catch","LocationForm","toggler","values","toggleCallback","choice","index","Toggler","_ref","weatherContent","footer","backgroundCredits","weatherAPICredits","createTextNode","body"],"sourceRoot":""}