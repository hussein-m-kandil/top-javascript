{"version":3,"file":"odin-library.a147b93d72f20ab0f3f9.bundle.js","mappings":"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","sources":["webpack://top-javascript-study/./odin-library/app/book.js","webpack://top-javascript-study/./odin-library/app/helper-functions.js","webpack://top-javascript-study/./odin-library/app/main-functions.js","webpack://top-javascript-study/./odin-library/index.js"],"sourcesContent":["// Book constructor for Odin Library\nexport default class Book {\n  static #booksCount = 0;\n\n  constructor(title, author, numOfPages, readState) {\n    this.id = String(++Book.#booksCount);\n    this.title = title;\n    this.author = author;\n    this.numOfPages = numOfPages;\n    this.readState = Boolean(readState);\n  }\n\n  /**\n   * A setter for readState property\n   *\n   * @param {boolean} readState\n   *\n   * @returns {void}\n   */\n  setReadState(readState) {\n    if (typeof readState === 'boolean') {\n      this.readState = readState;\n    }\n  }\n}\n","// HELPER FUNCTIONS FOR ODIN LIBRARY\n\n/**\n * Sets multiple attributes on element (mutate the element) at once.\n * @param {HTMLElement} element - HTML Element to set attributes on.\n * @param {[string, string][]} attrs - Attributes with its values as a list of string pairs.\n * @returns {void}\n */\nfunction setAttributes(element, attrs) {\n  if (element && element.setAttribute) {\n    if (attrs && Array.isArray(attrs)) {\n      for (let i = 0; i < attrs.length; i++) {\n        if (Array.isArray(attrs) && attrs[i].length === 2) {\n          element.setAttribute(attrs[i][0], attrs[i][1]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Creates input with its label.\n * @param {string} [labelText] - Text for the label.\n * @param {[string, string][]} [labelAttrs] - Attributes for label as list of string pairs.\n * @param {[string, string][]} [inputAttrs] - Attributes for input as list of string pairs.\n * @returns {[HTMLLabelElement, HTMLInputElement]}\n */\nfunction createLabelAndInput(labelText, labelAttrs, inputAttrs) {\n  const labelElement = document.createElement('label');\n  if (labelText && typeof labelText === 'string') {\n    labelElement.appendChild(document.createTextNode(labelText));\n  }\n  setAttributes(labelElement, labelAttrs);\n  const inputElement = document.createElement('input');\n  setAttributes(inputElement, inputAttrs);\n  return [labelElement, inputElement];\n}\n\n/**\n * Creates a span with its textContent & its className.\n * @param {string} spanText\n * @param {string} className\n * @returns {HTMLSpanElement}\n */\nfunction createSpan(spanText, className) {\n  const newSpan = document.createElement('span');\n  newSpan.className = className ?? '';\n  newSpan.appendChild(document.createTextNode(spanText ?? ''));\n  return newSpan;\n}\n\n/**\n * Creates an entry for book-card's body.\n * @param {string} entryTitle\n * @param {string} entryData\n * @returns {HTMLDivElement}\n */\nfunction createBookCardBodyEntry(entryTitle, entryData) {\n  const bookCardEntry = document.createElement('div');\n  bookCardEntry.className = 'book-card-entry';\n  bookCardEntry.appendChild(\n    createSpan(entryTitle + ': ', 'book-card-entry-title'),\n  );\n  bookCardEntry.appendChild(createSpan(entryData, 'book-card-entry-data'));\n  return bookCardEntry;\n}\n\n/**\n * Toggles book's read state.\n * @param {HTMLButtonElement} togglerBtn\n * @param {string} togglerText\n * @param {string} fromTogglerClass\n * @param {string} toTogglerClass\n * @param {HTMLSpanElement} readStateElement\n * @param {string} readStateElementText\n * @param {string} fromReadStateTextClass\n * @param {string} toReadStateTextClass\n * @returns {void}\n */\nfunction readStateToggler(\n  togglerBtn,\n  togglerText,\n  fromTogglerClass,\n  toTogglerClass,\n  readStateElement,\n  readStateElementText,\n  fromReadStateTextClass,\n  toReadStateTextClass,\n) {\n  togglerBtn.textContent = togglerText;\n  togglerBtn.classList.replace(fromTogglerClass, toTogglerClass);\n  togglerBtn.classList.replace(toReadStateTextClass, fromReadStateTextClass);\n  readStateElement.textContent = readStateElementText;\n  readStateElement.classList.replace(\n    fromReadStateTextClass,\n    toReadStateTextClass,\n  );\n}\n\n/**\n * Creates a button with its textContent & type, class, id and value attributes.\n * @param {string} textContent\n * @param {string} type\n * @param {string} className - String of spaces-separated class list.\n * @param {string} id\n * @param {string} value\n * @returns {HTMLButtonElement}\n */\nfunction createButton(textContent, type, className, id, value) {\n  const button = document.createElement('button');\n  button.appendChild(document.createTextNode(textContent));\n  button.setAttribute('type', type);\n  button.className = className ?? '';\n  button.id = id ?? '';\n  button.value = value ?? '';\n  return button;\n}\n\n/**\n * Stores the library's array on the locale Storage.\n * @param {string} key\n * @param {Book[]} data - The library.\n */\nfunction storeOnLocalStorage(key, data) {\n  if (localStorage) {\n    const JSONDataStr = JSON.stringify(data);\n    if (JSONDataStr.length < 3 * 1024 * 1024) {\n      localStorage.setItem(key, JSONDataStr);\n    }\n  }\n}\n\nexport {\n  createBookCardBodyEntry,\n  createLabelAndInput,\n  createButton,\n  setAttributes,\n  readStateToggler,\n  storeOnLocalStorage,\n};\n","import Book from './book.js';\nimport {\n  createBookCardBodyEntry,\n  createLabelAndInput,\n  createButton,\n  setAttributes,\n  readStateToggler,\n  storeOnLocalStorage,\n} from './helper-functions.js';\n\n// MAIN FUNCTIONS FOR ODIN LIBRARY\n\nconst LOCAL_STORAGE_KEY = 'odin-library-books';\n\n/**\n * Adds book card to the given books' container using the given book's data.\n * @param {Book} book\n * @param {HTMLDivElement} booksContainer\n * @returns {void}\n */\nfunction addBookToDOM(book, booksContainer, libraryArr) {\n  // Book card\n  const bookCard = document.createElement('div');\n  bookCard.className = 'book-card';\n  // Book card title\n  const bookTitle = document\n    .createElement('div')\n    .appendChild(document.createTextNode(book.title)).parentElement;\n  bookTitle.className = 'book-card-title';\n  // Book card body\n  const bookCardBody = document.createElement('div');\n  bookCardBody.className = 'book-card-body';\n  bookCardBody.appendChild(createBookCardBodyEntry('Author', book.author));\n  bookCardBody.appendChild(\n    createBookCardBodyEntry('Number of Pages', book.numOfPages),\n  );\n  const readStateDiv = createBookCardBodyEntry(\n    'Read',\n    book.readState ? 'Yes' : 'No',\n  );\n  readStateDiv.id = 'read-state-' + book.id;\n  readStateDiv.lastChild.classList.add(\n    book.readState ? 'success-text' : 'danger-text',\n  );\n  bookCardBody.appendChild(readStateDiv);\n  // Book card buttons\n  const bookCardButtons = document.createElement('div');\n  bookCardButtons.className = 'book-card-buttons';\n  const bookReadStateBtn = createButton(\n    'Mark as ' + (book.readState ? 'not read' : 'read'),\n    'button',\n    book.readState\n      ? 'danger-border danger-text'\n      : 'success-border success-text',\n    'read-state-toggler-' + book.id,\n    book.id,\n  );\n  bookReadStateBtn.addEventListener('click', (event) => {\n    const bookId = event.target.value;\n    for (let i = 0; i < libraryArr.length; i++) {\n      if (libraryArr[i].id === bookId) {\n        libraryArr[i].setReadState(!libraryArr[i].readState);\n        if (libraryArr[i].readState) {\n          readStateToggler(\n            event.target,\n            'Mark as not read',\n            'success-border',\n            'danger-border',\n            document.querySelector('#read-state-' + bookId).lastChild,\n            'Yes',\n            'danger-text',\n            'success-text',\n          );\n        } else {\n          readStateToggler(\n            event.target,\n            'Mark as read',\n            'danger-border',\n            'success-border',\n            document.querySelector('#read-state-' + bookId).lastChild,\n            'No',\n            'success-text',\n            'danger-text',\n          );\n        }\n        break;\n      }\n    }\n    storeOnLocalStorage(LOCAL_STORAGE_KEY, libraryArr);\n  });\n  const bookDeleteBtn = createButton(\n    'Delete',\n    'button',\n    'danger-text danger-border',\n    'book-card-del-btn-' + book.id,\n    book.id,\n  );\n  bookDeleteBtn.addEventListener('click', (event) => {\n    for (let i = 0; i < libraryArr.length; i++) {\n      if (libraryArr[i].id === event.target.value) {\n        libraryArr.splice(i, 1);\n        try {\n          document\n            .querySelector('.books-container')\n            ?.removeChild(event.target.parentElement.parentElement);\n        } catch (error) {\n          console.log(error.message);\n        }\n        break;\n      }\n    }\n    storeOnLocalStorage(LOCAL_STORAGE_KEY, libraryArr);\n  });\n  bookCardButtons.append(bookReadStateBtn, bookDeleteBtn);\n  bookCard.append(bookTitle, bookCardBody, bookCardButtons);\n  booksContainer.insertBefore(bookCard, booksContainer.firstChild);\n}\n\n/**\n * Adds a 'form' element for adding new book in the given parent node.\n * @param {Node} parentNode - Paren node to append the form to it.\n * @returns {void}\n */\nfunction addNewBookFormToDOM(parentNode, libraryArr) {\n  // Create the form\n  const newBookForm = document.createElement('form');\n  newBookForm.className = 'new-book-form';\n  const [titleLabel, titleInput] = createLabelAndInput(\n    'Title: ',\n    [['for', 'title']],\n    [\n      ['type', 'text'],\n      ['id', 'title'],\n      ['name', 'title'],\n      ['autocomplete', 'on'],\n      ['required', ''],\n    ],\n  );\n  if (window.HTMLDialogElement) titleInput.autofocus = true;\n  newBookForm.appendChild(\n    document\n      .createElement('div')\n      .appendChild(titleLabel)\n      .parentElement.appendChild(titleInput).parentElement,\n  );\n  const [authorLabel, authorInput] = createLabelAndInput(\n    'Author: ',\n    [['for', 'author']],\n    [\n      ['type', 'text'],\n      ['id', 'author'],\n      ['name', 'author'],\n      ['autocomplete', 'on'],\n      ['required', ''],\n    ],\n  );\n  newBookForm.appendChild(\n    document\n      .createElement('div')\n      .appendChild(authorLabel)\n      .parentElement.appendChild(authorInput).parentElement,\n  );\n  const [pagesNumLabel, pagesNumInput] = createLabelAndInput(\n    'Number of Pages: ',\n    [['for', 'pages-number']],\n    [\n      ['type', 'tel'],\n      ['id', 'pages-number'],\n      ['name', 'pages-number'],\n      ['pattern', '^[0-9]{1,7}$'],\n      ['autocomplete', 'on'],\n      ['required', ''],\n    ],\n  );\n  // Number validation\n  pagesNumInput.addEventListener('invalid', (event) => {\n    if (event.target.validity.patternMismatch) {\n      event.target.setCustomValidity('Numbers only are allowed here.');\n    } else {\n      event.target.setCustomValidity('');\n    }\n  });\n  pagesNumInput.addEventListener('input', (event) => {\n    if (event.target.checkValidity() && event.target.validity.customError) {\n      event.target.setCustomValidity('');\n    }\n  });\n  newBookForm.appendChild(\n    document\n      .createElement('div')\n      .appendChild(pagesNumLabel)\n      .parentElement.appendChild(pagesNumInput).parentElement,\n  );\n  const [readStateLabel, readStateInput] = createLabelAndInput(\n    ' Did you read this book?',\n    [['for', 'read-state']],\n    [\n      ['type', 'checkbox'],\n      ['id', 'read-state'],\n      ['name', 'read-state'],\n    ],\n  );\n  newBookForm.appendChild(\n    document\n      .createElement('div')\n      .appendChild(readStateInput)\n      .parentElement.appendChild(readStateLabel).parentElement,\n  );\n  const submitBtn = createButton('Add New Book', 'submit', 'success-color');\n  newBookForm.appendChild(\n    document.createElement('div').appendChild(submitBtn).parentElement,\n  );\n  // Add the form to DOM\n  parentNode.appendChild(newBookForm);\n  // Handle form submission\n  newBookForm.addEventListener('submit', (event) => {\n    event.preventDefault();\n    const formElements = event.target.elements;\n    const newBook = new Book(\n      formElements['title'].value,\n      formElements['author'].value,\n      formElements['pages-number'].value,\n      formElements['read-state'].checked,\n    );\n    libraryArr.unshift(newBook);\n    storeOnLocalStorage(LOCAL_STORAGE_KEY, libraryArr);\n    addBookToDOM(\n      newBook,\n      document.querySelector('.books-container'),\n      libraryArr,\n    );\n    for (let i = 0; i < formElements.length; i++) {\n      formElements[i].value = '';\n      if (formElements[i].type === 'checkbox') formElements[i].checked = false;\n    }\n    if (event.target.parentElement instanceof HTMLDialogElement) {\n      event.target.parentElement.close(); // Close the dialog if any\n    }\n  });\n}\n\n/**\n * Adds, to 'body' element, a new 'dialog' with a 'form' for adding a new book.\n * @returns {void}\n */\nfunction addNewBookDialogToDOM(libraryArr) {\n  // Button to show the dialog\n  const newBookBtn = createButton('+', 'button', 'new-book-dialog-show-btn');\n  newBookBtn.addEventListener('click', () => {\n    document.querySelector('dialog').showModal();\n  });\n  setAttributes(newBookBtn, [\n    ['aria-label', 'Add new book'],\n    ['title', 'Add new book'],\n  ]); // For better accessibility\n  document.body.appendChild(\n    document.createElement('div').appendChild(newBookBtn).parentElement,\n  );\n  // New book dialog\n  const formDialog = document.createElement('dialog');\n  const closeBtn = createButton('x', 'button', 'new-book-dialog-close-btn');\n  setAttributes(closeBtn, [\n    ['aria-label', 'Close'],\n    ['title', 'Close'],\n  ]); // For better accessibility\n  formDialog.appendChild(\n    document.createElement('div').appendChild(closeBtn).parentElement,\n  );\n  closeBtn.addEventListener('click', () =>\n    document.querySelector('dialog').close(),\n  );\n  addNewBookFormToDOM(formDialog, libraryArr); // Add new-book form to the dialog\n  document.body.appendChild(formDialog);\n}\n\nexport {\n  LOCAL_STORAGE_KEY,\n  addBookToDOM,\n  addNewBookFormToDOM,\n  addNewBookDialogToDOM,\n};\n","import Book from './app/book.js';\nimport {\n  LOCAL_STORAGE_KEY,\n  addBookToDOM,\n  addNewBookFormToDOM,\n  addNewBookDialogToDOM,\n} from './app/main-functions.js';\nimport './styles/main.css'; // CSS Styles\n\n// STATE LOGIC\n\nconst myLibrary = [];\n\nif (localStorage) {\n  const odinLibraryBooks = localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (odinLibraryBooks) {\n    myLibrary.push(...JSON.parse(odinLibraryBooks));\n  }\n}\n\nif (myLibrary.length > 0) {\n  // Re-instantiate books comes from localStorage from 'Book' class\n  myLibrary.splice(\n    0,\n    myLibrary.length,\n    ...myLibrary.map((book) => {\n      return new Book(book.title, book.author, book.numOfPages, book.readState);\n    }),\n  );\n} else {\n  // Fill the library with some dummy books if not filled\n  myLibrary.push(\n    new Book('Murder On The Orient Express', 'Agatha Christie', '256'),\n  );\n  myLibrary.push(new Book('Death on the Nile', 'Agatha Christie', '288', true));\n}\n\n// MAIN LOGIC\n\n// Add header\ndocument.body.appendChild(\n  document\n    .createElement('h1')\n    .appendChild(document.createTextNode('Odin Library')).parentElement,\n);\n// Add new-book form' to the DOM\nif (!window.HTMLDialogElement) {\n  addNewBookFormToDOM(document.body, myLibrary); // Only if no modal support\n} else {\n  // If modal support create new-book button and modal, then add form to modal\n  addNewBookDialogToDOM(myLibrary);\n}\n// Create and add books container\nconst booksContainer = document.createElement('div');\nbooksContainer.className = 'books-container';\ndocument.body.appendChild(booksContainer);\n// Add book to the DOM\nfor (let i = myLibrary.length - 1; i >= 0; i--) {\n  addBookToDOM(myLibrary[i], booksContainer, myLibrary);\n}\n"],"names":["Book","static","constructor","title","author","numOfPages","readState","this","id","String","Boolean","setReadState","setAttributes","element","attrs","setAttribute","Array","isArray","i","length","createLabelAndInput","labelText","labelAttrs","inputAttrs","labelElement","document","createElement","appendChild","createTextNode","inputElement","createSpan","spanText","className","newSpan","createBookCardBodyEntry","entryTitle","entryData","bookCardEntry","readStateToggler","togglerBtn","togglerText","fromTogglerClass","toTogglerClass","readStateElement","readStateElementText","fromReadStateTextClass","toReadStateTextClass","textContent","classList","replace","createButton","type","value","button","storeOnLocalStorage","key","data","localStorage","JSONDataStr","JSON","stringify","setItem","LOCAL_STORAGE_KEY","addBookToDOM","book","booksContainer","libraryArr","bookCard","bookTitle","parentElement","bookCardBody","readStateDiv","lastChild","add","bookCardButtons","bookReadStateBtn","addEventListener","event","bookId","target","querySelector","bookDeleteBtn","splice","removeChild","error","console","log","message","append","insertBefore","firstChild","addNewBookFormToDOM","parentNode","newBookForm","titleLabel","titleInput","window","HTMLDialogElement","autofocus","authorLabel","authorInput","pagesNumLabel","pagesNumInput","validity","patternMismatch","setCustomValidity","checkValidity","customError","readStateLabel","readStateInput","submitBtn","preventDefault","formElements","elements","newBook","checked","unshift","close","myLibrary","odinLibraryBooks","getItem","push","parse","map","body","newBookBtn","showModal","formDialog","closeBtn","addNewBookDialogToDOM"],"sourceRoot":""}