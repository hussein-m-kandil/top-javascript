{"version":3,"file":"odin-weather-app.a3b3964c335d6e70e997.bundle.js","mappings":"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","sources":["webpack://top-javascript-study/webpack/bootstrap","webpack://top-javascript-study/./odin-weather-app/helpers/createElement.js","webpack://top-javascript-study/./odin-weather-app/helpers/getWeatherData.js","webpack://top-javascript-study/webpack/runtime/publicPath","webpack://top-javascript-study/./node_modules/date-fns/toDate.mjs","webpack://top-javascript-study/./node_modules/date-fns/isAfter.mjs","webpack://top-javascript-study/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://top-javascript-study/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://top-javascript-study/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://top-javascript-study/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://top-javascript-study/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://top-javascript-study/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://top-javascript-study/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://top-javascript-study/./node_modules/date-fns/locale/en-US.mjs","webpack://top-javascript-study/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://top-javascript-study/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://top-javascript-study/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://top-javascript-study/./node_modules/date-fns/constants.mjs","webpack://top-javascript-study/./node_modules/date-fns/startOfDay.mjs","webpack://top-javascript-study/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://top-javascript-study/./node_modules/date-fns/constructFrom.mjs","webpack://top-javascript-study/./node_modules/date-fns/getDayOfYear.mjs","webpack://top-javascript-study/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://top-javascript-study/./node_modules/date-fns/startOfYear.mjs","webpack://top-javascript-study/./node_modules/date-fns/startOfWeek.mjs","webpack://top-javascript-study/./node_modules/date-fns/startOfISOWeek.mjs","webpack://top-javascript-study/./node_modules/date-fns/getISOWeekYear.mjs","webpack://top-javascript-study/./node_modules/date-fns/getISOWeek.mjs","webpack://top-javascript-study/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://top-javascript-study/./node_modules/date-fns/getWeekYear.mjs","webpack://top-javascript-study/./node_modules/date-fns/getWeek.mjs","webpack://top-javascript-study/./node_modules/date-fns/startOfWeekYear.mjs","webpack://top-javascript-study/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://top-javascript-study/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://top-javascript-study/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://top-javascript-study/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://top-javascript-study/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://top-javascript-study/./node_modules/date-fns/isValid.mjs","webpack://top-javascript-study/./node_modules/date-fns/isDate.mjs","webpack://top-javascript-study/./node_modules/date-fns/format.mjs","webpack://top-javascript-study/./odin-weather-app/components/WeatherInfo/index.js","webpack://top-javascript-study/./odin-weather-app/helpers/showWeatherData.js","webpack://top-javascript-study/./odin-weather-app/index.js","webpack://top-javascript-study/./odin-weather-app/components/LocationForm/index.js","webpack://top-javascript-study/./odin-weather-app/helpers/showLoadingIndicator.js","webpack://top-javascript-study/./odin-weather-app/components/Toggler/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","/**\n * Creates HTMLElement of the given 'tagName' with any of the given\n * className, id or attributes\n * @param {string} tagName\n * @param {string?} className\n * @param {string?} textContent\n * @param {Array<string, string>?} attrs\n * - Any number of attributes (each of which as a key-value pair)\n * @returns {HTMLElement}\n */\nexport default function createElement(\n  tagName,\n  className,\n  textContent,\n  ...attrs\n) {\n  if (typeof tagName !== 'string') {\n    throw TypeError(\"Missing 'tagName' of type 'string'!\");\n  }\n  const element = document.createElement(tagName);\n  if (className) element.className = className;\n  if (textContent) element.textContent = textContent;\n  // Flatten attrs 1 level depth (in case attrs is in the form of an Array of paris)\n  if (\n    attrs.length === 1 &&\n    Array.isArray(attrs[0]) &&\n    Array.isArray(attrs[0][0])\n  ) {\n    attrs = attrs.flat(1);\n  }\n  if (attrs.length > 0) {\n    for (let i = 0; i < attrs.length; i++) {\n      if (\n        Array.isArray(attrs[i]) &&\n        attrs[i].length === 2 &&\n        attrs[i][0] &&\n        typeof attrs[i][0] === 'string'\n      ) {\n        if (attrs[i][1] || attrs[i][1] === 0 || attrs[i][1] === '') {\n          element.setAttribute(attrs[i][0], attrs[i][1]);\n        }\n      } else {\n        throw TypeError(\n          \"A given attribute in '...attrs' must be in the form of [string, string]\",\n        );\n      }\n    }\n  }\n  return element;\n}\n\nexport { createElement };\n","const BASE_URL = 'https://api.weatherapi.com/v1';\nconst FORECAST_API = '/forecast.json';\nconst SECO_SECO = '646f26dea5ab4974bc3120515240604';\n\nasync function fetchWeatherData(location) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}${FORECAST_API}?key=${SECO_SECO}&q=${location}`,\n      {\n        mode: 'cors',\n      },\n    );\n    if (response.ok) {\n      return await response.json();\n    }\n    throw Error('Fetched response in not ok!');\n  } catch (error) {\n    console.log(`${error.name} in 'getWeatherData': \\n\\t${error.message}`);\n  }\n  return null;\n}\n\nexport default function getWeatherData(location) {\n  return new Promise((resolve, reject) => {\n    fetchWeatherData(location).then((weatherData) => {\n      if (weatherData) {\n        resolve(weatherData);\n      } else {\n        reject(Error('There is no weather data!'));\n      }\n    });\n  });\n}\n\nexport { getWeatherData };\n","__webpack_require__.p = \"./\";","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date that should be after the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nexport function isAfter(date, dateToCompare) {\n  const _date = toDate(date);\n  const _dateToCompare = toDate(dateToCompare);\n  return _date.getTime() > _dateToCompare.getTime();\n}\n\n// Fallback for modularized imports:\nexport default isAfter;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import './index.css';\n\nimport createElement from '../../helpers/createElement';\nimport { format, isAfter } from 'date-fns';\n\nfunction createCard(title, content, className) {\n  const card = createElement('div', `card ${className}`);\n  card.append(\n    createElement('div', 'title', title),\n    createElement('div', 'content', content),\n  );\n  return card;\n}\n\nexport default function WeatherInfo(weatherData, weatherUnit) {\n  const currentWeather = weatherData.current;\n  const todayWeather = weatherData.forecast.forecastday[0].day;\n  const todayHoursWeather = weatherData.forecast.forecastday[0].hour;\n  const unit = weatherUnit.toLowerCase();\n  let cTemp, feel, hTemp, lTemp;\n\n  if (unit === 'celsius') {\n    feel = currentWeather.feelslike_c;\n    cTemp = currentWeather.temp_c;\n    hTemp = todayWeather.maxtemp_c;\n    lTemp = todayWeather.mintemp_c;\n  } else {\n    cTemp = currentWeather.temp_f;\n    feel = currentWeather.feelslike_f;\n    hTemp = todayWeather.maxtemp_f;\n    lTemp = todayWeather.mintemp_f;\n  }\n\n  const weatherInfo = createElement('div', 'current-weather');\n\n  // Current weather\n  const hero = createElement('div', 'weather-hero');\n  const extras = createElement('div', 'weather-extras');\n  hero.append(\n    createElement('div', 'current-temp', `${cTemp}°`),\n    createElement('div', 'condition', `${currentWeather.condition.text}`),\n    createElement('span', 'feels-like', ` Feels like ${feel}°`),\n  );\n  extras.append(\n    createCard('High', `${hTemp}°`, 'high-temp'),\n    createCard('Low', `${lTemp}°`, 'low-temp'),\n    createCard('Humidity', `${currentWeather.humidity}%`, 'humidity'),\n  );\n\n  // Today hours weather\n  const hoursWeather = createElement('div', 'hours-weather');\n  for (let i = 0; i < todayHoursWeather.length; i++) {\n    const hourInfo = todayHoursWeather[i];\n    if (isAfter(hourInfo.time, new Date())) {\n      hoursWeather.append(\n        createCard(\n          format(hourInfo.time, 'hh:mm a'),\n          unit === 'celsius' ? `${hourInfo.temp_c}°` : `${hourInfo.temp_f}°`,\n          'hour-temp',\n        ),\n      );\n    }\n  }\n\n  weatherInfo.append(hero, extras, hoursWeather);\n\n  return weatherInfo;\n}\n\nexport { WeatherInfo };\n","import WeatherInfo from '../components/WeatherInfo';\n\nexport default function showWeatherData(\n  containerClassName,\n  weatherData,\n  weatherUnit,\n) {\n  const locationInput = document.querySelector('input.location');\n  if (locationInput) {\n    locationInput.value = weatherData.location.name;\n  }\n\n  const contentDiv = document.querySelector(`.${containerClassName}`);\n  if (contentDiv) {\n    [...contentDiv.children].forEach((child) => child.remove());\n    contentDiv.append(WeatherInfo(weatherData, weatherUnit));\n  }\n}\n\nexport { showWeatherData };\n","import './index.css';\n\nimport createElement from './helpers/createElement';\nimport getWeatherData from './helpers/getWeatherData';\nimport showWeatherData from './helpers/showWeatherData';\nimport showLoadingIndicator from './helpers/showLoadingIndicator';\nimport LocationForm from './components/LocationForm';\nimport Toggler from './components/Toggler';\n\nconst WEATHER_CONTENT_CLASS = 'weather-content';\nconst WEATHER_UNITS = ['Celsius', 'Fahrenheit'];\nlet currentWeatherUnit = WEATHER_UNITS[0];\nlet currentWeatherData = null;\n\nconst appTitle = createElement('h1', 'app-title', 'Odin Weather App');\n\nconst locationForm = LocationForm((location) => {\n  showLoadingIndicator(WEATHER_CONTENT_CLASS);\n  getWeatherData(location)\n    .then((weatherData) => {\n      currentWeatherData = weatherData;\n      showWeatherData(\n        WEATHER_CONTENT_CLASS,\n        currentWeatherData,\n        currentWeatherUnit,\n      );\n    })\n    .catch(() => {\n      const contentDiv = document.querySelector(`.${WEATHER_CONTENT_CLASS}`);\n      if (contentDiv) {\n        [...contentDiv.children].forEach((child) => child.remove());\n        contentDiv.append(\n          createElement(\n            'div',\n            'weather-info-error',\n            \"No weather data! check the location's name and try again.\",\n          ),\n        );\n      }\n    });\n});\n\nconst toggler = Toggler(WEATHER_UNITS, ({ value }) => {\n  currentWeatherUnit = value;\n  if (currentWeatherData) {\n    showWeatherData(\n      WEATHER_CONTENT_CLASS,\n      currentWeatherData,\n      currentWeatherUnit,\n    );\n  }\n});\n\nconst weatherContent = createElement('div', WEATHER_CONTENT_CLASS);\nweatherContent.append(\n  createElement('div', 'initial-message', 'Weather data will be shown here...'),\n);\n\nconst footer = createElement('footer', 'link-back');\nconst backgroundCredits = createElement('div', 'bg-credits');\nconst weatherAPICredits = createElement('div', 'weather-api-credits');\nbackgroundCredits.append(\n  document.createTextNode('Background image by '),\n  createElement('a', 'bg-image-owner', ' 12019', [\n    'href',\n    'https://pixabay.com/users/12019-12019/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1985027',\n  ]),\n  document.createTextNode(' from '),\n  createElement('a', 'bg-image-site', ' Pixabay', [\n    'href',\n    'https://pixabay.com/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=1985027',\n  ]),\n);\nweatherAPICredits.append(\n  document.createTextNode('Powered by '),\n  createElement(\n    'a',\n    'weather-api',\n    ' WeatherAPI.com',\n    ['href', 'https://www.weatherapi.com/'],\n    ['title', 'Weather API'],\n  ),\n);\nfooter.append(backgroundCredits, weatherAPICredits);\n\ndocument.body.append(appTitle, locationForm, toggler, weatherContent, footer);\n","import './index.css';\n\nimport { createElement } from '../../helpers/createElement';\n\n/**\n * A Form to get the location for the user\n * @param {function} submitCallback - A function that accepts 'location': 'string'\n * @returns {HTMLFormElement}\n */\nexport default function LocationForm(submitCallback) {\n  const form = createElement('form', 'weather-location');\n  const input = createElement(\n    'input',\n    'location',\n    '',\n    ['type', 'text'],\n    ['name', 'location'],\n    ['placeholder', 'Location (e.g. \"Cairo\")'],\n    ['autocomplete', 'off'],\n    ['autofocus', ''],\n  );\n  const button = createElement(\n    'button',\n    'location',\n    '',\n    ['type', 'submit'],\n    ['aria-label', 'Get weather'],\n  );\n  const span = createElement('span', 'ui-only', '🔍', ['aria-hidden', 'true']);\n  const errorDiv = createElement('div', 'error');\n\n  button.appendChild(span);\n  form.append(errorDiv, input, button);\n\n  form.addEventListener('submit', (event) => {\n    event.preventDefault();\n    form.classList.add('invalid');\n    const locationInput = form['location'];\n    const location = locationInput.value;\n    if (location) {\n      if (/^[\\w-\\s'\"]+$/.test(location)) {\n        errorDiv.textContent = '';\n        form.classList.remove('invalid');\n        submitCallback(location);\n        // Close virtual keyboard on mobile phones.\n        locationInput.blur();\n      } else {\n        errorDiv.textContent = '* Invalid location name!';\n      }\n    } else {\n      errorDiv.textContent = '* Location is required!';\n    }\n  });\n\n  return form;\n}\n\nexport { LocationForm };\n","import loadingGif from '../../assets/loading_256.gif';\nimport createElement from './createElement';\n\nexport default function showLoadingIndicator(containerClassName) {\n  const contentDiv = document.querySelector(`.${containerClassName}`);\n  if (contentDiv) {\n    [...contentDiv.children].forEach((child) => child.remove());\n    contentDiv.append(\n      createElement(\n        'img',\n        'loading-gif',\n        null,\n        ['src', loadingGif],\n        ['alt', 'Loading...'],\n        ['width', '50'],\n      ),\n    );\n  }\n}\n\nexport { showLoadingIndicator };\n","import './index.css';\n\nimport createElement from '../../helpers/createElement';\n\n/**\n * A button that toggles between values\n *\n * @param {string[]} values - An array of values to toggle between them\n * @param {function} toggleCallback - A function  to be called on toggle\n *\n * NOTE: 'toggleCallback' must accepts an object i.e. { index: number, value: string }\n * - index: the index of the current value in the values array.\n * - value: the current value of the button\n *\n * @returns {HTMLButtonElement} - The toggler\n */\nexport default function Toggler(values, toggleCallback) {\n  if (!toggleCallback)\n    throw Error(\"Missing argument: 'toggleCallback' type 'function'\");\n  if (!values) throw Error(\"Missing argument: 'values' type 'string[]'\");\n  if (!Array.isArray(values) || values.length < 1) {\n    throw TypeError(\n      \"Invalid argument: 'values' must be non-empty array of strings\",\n    );\n  }\n\n  const toggler = createElement('div', 'toggler', null, [\n    'aria-label',\n    'Unit Toggler',\n  ]);\n  for (let i = 0; i < values.length; i++) {\n    const choice = createElement(\n      'button',\n      `toggler-choice${i === 0 ? ' toggler-choice-selected' : ''}`,\n      values[i],\n      ['type', 'button'],\n    );\n    choice.addEventListener('click', () => {\n      toggleCallback({\n        index: i,\n        value: values[i],\n      });\n      [...toggler.children].forEach((child) =>\n        child.classList.remove('toggler-choice-selected'),\n      );\n      choice.classList.add('toggler-choice-selected');\n    });\n    toggler.append(choice);\n  }\n\n  return toggler;\n}\n\nexport { Toggler };\n"],"names":["__webpack_require__","createElement","tagName","className","textContent","_len","arguments","length","attrs","Array","_key","TypeError","element","document","isArray","flat","i","setAttribute","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","BASE_URL","FORECAST_API","SECO_SECO","_fetchWeatherData","fn","_callee","location","response","_context","fetch","concat","mode","ok","json","t0","console","log","message","self","args","apply","err","undefined","toDate","argument","argStr","toString","Date","NaN","isAfter","date","dateToCompare","_date","_dateToCompare","getTime","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","array","predicate","test","findIndex","object","findKey","valueCallback","rest","enUS","code","formatDistance","token","count","result","tokenValue","replace","addSuffix","comparison","formatRelative","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","constructFrom","getDayOfYear","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarDays","cleanDate","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","signedYear","M","dayPeriodEnumValue","toUpperCase","H","m","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","map","substring","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","warn","includes","warnOrThrowProtectedError","formatter","matched","createCard","title","content","card","append","showWeatherData","containerClassName","weatherData","weatherUnit","locationInput","querySelector","contentDiv","children","child","remove","cTemp","feel","hTemp","lTemp","currentWeather","current","todayWeather","forecast","forecastday","todayHoursWeather","hour","feelslike_c","temp_c","maxtemp_c","mintemp_c","temp_f","feelslike_f","maxtemp_f","mintemp_f","weatherInfo","hero","extras","condition","text","humidity","hoursWeather","hourInfo","WeatherInfo","submitCallback","form","button","span","errorDiv","WEATHER_CONTENT_CLASS","WEATHER_UNITS","currentWeatherUnit","currentWeatherData","appTitle","locationForm","loadingGif","_x","fetchWeatherData","getWeatherData","_toConsumableArray","appendChild","addEventListener","event","preventDefault","classList","add","blur","toggler","toggleCallback","_loop","choice","Toggler","_ref","weatherContent","footer","backgroundCredits","weatherAPICredits","createTextNode","body"],"sourceRoot":""}