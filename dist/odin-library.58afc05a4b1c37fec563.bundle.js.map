{"version":3,"file":"odin-library.58afc05a4b1c37fec563.bundle.js","mappings":"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","sources":["webpack://top-javascript-study/./odin-library/app/book.js","webpack://top-javascript-study/./odin-library/app/helper-functions.js","webpack://top-javascript-study/./odin-library/app/main-functions.js","webpack://top-javascript-study/./odin-library/index.js"],"sourcesContent":["// Book constructor for Odin Library\nexport default class Book {\n  static #booksCount = 0;\n\n  constructor(title, author, numOfPages, readState) {\n    this.id = String(++Book.#booksCount);\n    this.title = title;\n    this.author = author;\n    this.numOfPages = numOfPages;\n    this.readState = Boolean(readState);\n  }\n\n  /**\n   * A setter for readState property\n   *\n   * @param {boolean} readState\n   *\n   * @returns {void}\n   */\n  setReadState(readState) {\n    if (typeof readState === \"boolean\") {\n      this.readState = readState;\n    }\n  }\n}\n","// HELPER FUNCTIONS FOR ODIN LIBRARY\n\n/**\n * Sets multiple attributes on element (mutate the element) at once.\n * @param {HTMLElement} element - HTML Element to set attributes on.\n * @param {[string, string][]} attrs - Attributes with its values as a list of string pairs.\n * @returns {void}\n */\nfunction setAttributes(element, attrs) {\n  if (element && element.setAttribute) {\n    if (attrs && Array.isArray(attrs)) {\n      for (let i = 0; i < attrs.length; i++) {\n        if (Array.isArray(attrs) && attrs[i].length === 2) {\n          element.setAttribute(attrs[i][0], attrs[i][1]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Creates input with its label.\n * @param {string} [labelText] - Text for the label.\n * @param {[string, string][]} [labelAttrs] - Attributes for label as list of string pairs.\n * @param {[string, string][]} [inputAttrs] - Attributes for input as list of string pairs.\n * @returns {[HTMLLabelElement, HTMLInputElement]}\n */\nfunction createLabelAndInput(labelText, labelAttrs, inputAttrs) {\n  const labelElement = document.createElement(\"label\");\n  if (labelText && typeof labelText === \"string\") {\n    labelElement.appendChild(document.createTextNode(labelText));\n  }\n  setAttributes(labelElement, labelAttrs);\n  const inputElement = document.createElement(\"input\");\n  setAttributes(inputElement, inputAttrs);\n  return [labelElement, inputElement];\n}\n\n/**\n * Creates a span with its textContent & its className.\n * @param {string} spanText\n * @param {string} className\n * @returns {HTMLSpanElement}\n */\nfunction createSpan(spanText, className) {\n  const newSpan = document.createElement(\"span\");\n  newSpan.className = className ?? \"\";\n  newSpan.appendChild(document.createTextNode(spanText ?? \"\"));\n  return newSpan;\n}\n\n/**\n * Creates an entry for book-card's body.\n * @param {string} entryTitle\n * @param {string} entryData\n * @returns {HTMLDivElement}\n */\nfunction createBookCardBodyEntry(entryTitle, entryData) {\n  const bookCardEntry = document.createElement(\"div\");\n  bookCardEntry.className = \"book-card-entry\";\n  bookCardEntry.appendChild(\n    createSpan(entryTitle + \": \", \"book-card-entry-title\")\n  );\n  bookCardEntry.appendChild(createSpan(entryData, \"book-card-entry-data\"));\n  return bookCardEntry;\n}\n\n/**\n * Toggles book's read state.\n * @param {HTMLButtonElement} togglerBtn\n * @param {string} togglerText\n * @param {string} fromTogglerClass\n * @param {string} toTogglerClass\n * @param {HTMLSpanElement} readStateElement\n * @param {string} readStateElementText\n * @param {string} fromReadStateTextClass\n * @param {string} toReadStateTextClass\n * @returns {void}\n */\nfunction readStateToggler(\n  togglerBtn,\n  togglerText,\n  fromTogglerClass,\n  toTogglerClass,\n  readStateElement,\n  readStateElementText,\n  fromReadStateTextClass,\n  toReadStateTextClass\n) {\n  togglerBtn.textContent = togglerText;\n  togglerBtn.classList.replace(fromTogglerClass, toTogglerClass);\n  togglerBtn.classList.replace(toReadStateTextClass, fromReadStateTextClass);\n  readStateElement.textContent = readStateElementText;\n  readStateElement.classList.replace(\n    fromReadStateTextClass,\n    toReadStateTextClass\n  );\n}\n\n/**\n * Creates a button with its textContent & type, class, id and value attributes.\n * @param {string} textContent\n * @param {string} type\n * @param {string} className - String of spaces-separated class list.\n * @param {string} id\n * @param {string} value\n * @returns {HTMLButtonElement}\n */\nfunction createButton(textContent, type, className, id, value) {\n  const button = document.createElement(\"button\");\n  button.appendChild(document.createTextNode(textContent));\n  button.setAttribute(\"type\", type);\n  button.className = className ?? \"\";\n  button.id = id ?? \"\";\n  button.value = value ?? \"\";\n  return button;\n}\n\n/**\n * Stores the library's array on the locale Storage.\n * @param {string} key\n * @param {Book[]} data - The library.\n */\nfunction storeOnLocalStorage(key, data) {\n  if (localStorage) {\n    const JSONDataStr = JSON.stringify(data);\n    if (JSONDataStr.length < 3 * 1024 * 1024) {\n      localStorage.setItem(key, JSONDataStr);\n    }\n  }\n}\n\nexport {\n  createBookCardBodyEntry,\n  createLabelAndInput,\n  createButton,\n  setAttributes,\n  readStateToggler,\n  storeOnLocalStorage,\n};\n","import Book from \"./book.js\";\nimport {\n  createBookCardBodyEntry,\n  createLabelAndInput,\n  createButton,\n  setAttributes,\n  readStateToggler,\n  storeOnLocalStorage,\n} from \"./helper-functions.js\";\n\n// MAIN FUNCTIONS FOR ODIN LIBRARY\n\nconst LOCAL_STORAGE_KEY = \"odin-library-books\";\n\n/**\n * Adds book card to the given books' container using the given book's data.\n * @param {Book} book\n * @param {HTMLDivElement} booksContainer\n * @returns {void}\n */\nfunction addBookToDOM(book, booksContainer, libraryArr) {\n  // Book card\n  const bookCard = document.createElement(\"div\");\n  bookCard.className = \"book-card\";\n  // Book card title\n  const bookTitle = document\n    .createElement(\"div\")\n    .appendChild(document.createTextNode(book.title)).parentElement;\n  bookTitle.className = \"book-card-title\";\n  // Book card body\n  const bookCardBody = document.createElement(\"div\");\n  bookCardBody.className = \"book-card-body\";\n  bookCardBody.appendChild(createBookCardBodyEntry(\"Author\", book.author));\n  bookCardBody.appendChild(\n    createBookCardBodyEntry(\"Number of Pages\", book.numOfPages)\n  );\n  const readStateDiv = createBookCardBodyEntry(\n    \"Read\",\n    book.readState ? \"Yes\" : \"No\"\n  );\n  readStateDiv.id = \"read-state-\" + book.id;\n  readStateDiv.lastChild.classList.add(\n    book.readState ? \"success-text\" : \"danger-text\"\n  );\n  bookCardBody.appendChild(readStateDiv);\n  // Book card buttons\n  const bookCardButtons = document.createElement(\"div\");\n  bookCardButtons.className = \"book-card-buttons\";\n  const bookReadStateBtn = createButton(\n    \"Mark as \" + (book.readState ? \"not read\" : \"read\"),\n    \"button\",\n    book.readState\n      ? \"danger-border danger-text\"\n      : \"success-border success-text\",\n    \"read-state-toggler-\" + book.id,\n    book.id\n  );\n  bookReadStateBtn.addEventListener(\"click\", (event) => {\n    const bookId = event.target.value;\n    for (let i = 0; i < libraryArr.length; i++) {\n      if (libraryArr[i].id === bookId) {\n        libraryArr[i].setReadState(!libraryArr[i].readState);\n        if (libraryArr[i].readState) {\n          readStateToggler(\n            event.target,\n            \"Mark as not read\",\n            \"success-border\",\n            \"danger-border\",\n            document.querySelector(\"#read-state-\" + bookId).lastChild,\n            \"Yes\",\n            \"danger-text\",\n            \"success-text\"\n          );\n        } else {\n          readStateToggler(\n            event.target,\n            \"Mark as read\",\n            \"danger-border\",\n            \"success-border\",\n            document.querySelector(\"#read-state-\" + bookId).lastChild,\n            \"No\",\n            \"success-text\",\n            \"danger-text\"\n          );\n        }\n        break;\n      }\n    }\n    storeOnLocalStorage(LOCAL_STORAGE_KEY, libraryArr);\n  });\n  const bookDeleteBtn = createButton(\n    \"Delete\",\n    \"button\",\n    \"danger-text danger-border\",\n    \"book-card-del-btn-\" + book.id,\n    book.id\n  );\n  bookDeleteBtn.addEventListener(\"click\", (event) => {\n    for (let i = 0; i < libraryArr.length; i++) {\n      if (libraryArr[i].id === event.target.value) {\n        libraryArr.splice(i, 1);\n        try {\n          document\n            .querySelector(\".books-container\")\n            ?.removeChild(event.target.parentElement.parentElement);\n        } catch (error) {\n          console.log(error.message);\n        }\n        break;\n      }\n    }\n    storeOnLocalStorage(LOCAL_STORAGE_KEY, libraryArr);\n  });\n  bookCardButtons.append(bookReadStateBtn, bookDeleteBtn);\n  bookCard.append(bookTitle, bookCardBody, bookCardButtons);\n  booksContainer.insertBefore(bookCard, booksContainer.firstChild);\n}\n\n/**\n * Adds a 'form' element for adding new book in the given parent node.\n * @param {Node} parentNode - Paren node to append the form to it.\n * @returns {void}\n */\nfunction addNewBookFormToDOM(parentNode, libraryArr) {\n  // Create the form\n  const newBookForm = document.createElement(\"form\");\n  newBookForm.className = \"new-book-form\";\n  const [titleLabel, titleInput] = createLabelAndInput(\n    \"Title: \",\n    [[\"for\", \"title\"]],\n    [\n      [\"type\", \"text\"],\n      [\"id\", \"title\"],\n      [\"name\", \"title\"],\n      [\"autocomplete\", \"on\"],\n      [\"required\", \"\"],\n    ]\n  );\n  if (window.HTMLDialogElement) titleInput.autofocus = true;\n  newBookForm.appendChild(\n    document\n      .createElement(\"div\")\n      .appendChild(titleLabel)\n      .parentElement.appendChild(titleInput).parentElement\n  );\n  const [authorLabel, authorInput] = createLabelAndInput(\n    \"Author: \",\n    [[\"for\", \"author\"]],\n    [\n      [\"type\", \"text\"],\n      [\"id\", \"author\"],\n      [\"name\", \"author\"],\n      [\"autocomplete\", \"on\"],\n      [\"required\", \"\"],\n    ]\n  );\n  newBookForm.appendChild(\n    document\n      .createElement(\"div\")\n      .appendChild(authorLabel)\n      .parentElement.appendChild(authorInput).parentElement\n  );\n  const [pagesNumLabel, pagesNumInput] = createLabelAndInput(\n    \"Number of Pages: \",\n    [[\"for\", \"pages-number\"]],\n    [\n      [\"type\", \"tel\"],\n      [\"id\", \"pages-number\"],\n      [\"name\", \"pages-number\"],\n      [\"pattern\", \"^[0-9]{1,7}$\"],\n      [\"autocomplete\", \"on\"],\n      [\"required\", \"\"],\n    ]\n  );\n  // Number validation\n  pagesNumInput.addEventListener(\"invalid\", (event) => {\n    if (event.target.validity.patternMismatch) {\n      event.target.setCustomValidity(\"Numbers only are allowed here.\");\n    } else {\n      event.target.setCustomValidity(\"\");\n    }\n  });\n  pagesNumInput.addEventListener(\"input\", (event) => {\n    if (event.target.checkValidity() && event.target.validity.customError) {\n      event.target.setCustomValidity(\"\");\n    }\n  });\n  newBookForm.appendChild(\n    document\n      .createElement(\"div\")\n      .appendChild(pagesNumLabel)\n      .parentElement.appendChild(pagesNumInput).parentElement\n  );\n  const [readStateLabel, readStateInput] = createLabelAndInput(\n    \" Did you read this book?\",\n    [[\"for\", \"read-state\"]],\n    [\n      [\"type\", \"checkbox\"],\n      [\"id\", \"read-state\"],\n      [\"name\", \"read-state\"],\n    ]\n  );\n  newBookForm.appendChild(\n    document\n      .createElement(\"div\")\n      .appendChild(readStateInput)\n      .parentElement.appendChild(readStateLabel).parentElement\n  );\n  const submitBtn = createButton(\"Add New Book\", \"submit\", \"success-color\");\n  newBookForm.appendChild(\n    document.createElement(\"div\").appendChild(submitBtn).parentElement\n  );\n  // Add the form to DOM\n  parentNode.appendChild(newBookForm);\n  // Handle form submission\n  newBookForm.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n    const formElements = event.target.elements;\n    const newBook = new Book(\n      formElements[\"title\"].value,\n      formElements[\"author\"].value,\n      formElements[\"pages-number\"].value,\n      formElements[\"read-state\"].checked\n    );\n    libraryArr.unshift(newBook);\n    storeOnLocalStorage(LOCAL_STORAGE_KEY, libraryArr);\n    addBookToDOM(\n      newBook,\n      document.querySelector(\".books-container\"),\n      libraryArr\n    );\n    for (let i = 0; i < formElements.length; i++) {\n      formElements[i].value = \"\";\n      if (formElements[i].type === \"checkbox\") formElements[i].checked = false;\n    }\n    if (event.target.parentElement instanceof HTMLDialogElement) {\n      event.target.parentElement.close(); // Close the dialog if any\n    }\n  });\n}\n\n/**\n * Adds, to 'body' element, a new 'dialog' with a 'form' for adding a new book.\n * @returns {void}\n */\nfunction addNewBookDialogToDOM(libraryArr) {\n  // Button to show the dialog\n  const newBookBtn = createButton(\"+\", \"button\", \"new-book-dialog-show-btn\");\n  newBookBtn.addEventListener(\"click\", () => {\n    document.querySelector(\"dialog\").showModal();\n  });\n  setAttributes(newBookBtn, [\n    [\"aria-label\", \"Add new book\"],\n    [\"title\", \"Add new book\"],\n  ]); // For better accessibility\n  document.body.appendChild(\n    document.createElement(\"div\").appendChild(newBookBtn).parentElement\n  );\n  // New book dialog\n  const formDialog = document.createElement(\"dialog\");\n  const closeBtn = createButton(\"x\", \"button\", \"new-book-dialog-close-btn\");\n  setAttributes(closeBtn, [\n    [\"aria-label\", \"Close\"],\n    [\"title\", \"Close\"],\n  ]); // For better accessibility\n  formDialog.appendChild(\n    document.createElement(\"div\").appendChild(closeBtn).parentElement\n  );\n  closeBtn.addEventListener(\"click\", () =>\n    document.querySelector(\"dialog\").close()\n  );\n  addNewBookFormToDOM(formDialog, libraryArr); // Add new-book form to the dialog\n  document.body.appendChild(formDialog);\n}\n\nexport {\n  LOCAL_STORAGE_KEY,\n  addBookToDOM,\n  addNewBookFormToDOM,\n  addNewBookDialogToDOM,\n};\n","import Book from \"./app/book.js\";\nimport {\n  LOCAL_STORAGE_KEY,\n  addBookToDOM,\n  addNewBookFormToDOM,\n  addNewBookDialogToDOM,\n} from \"./app/main-functions.js\";\nimport \"./styles/main.css\"; // CSS Styles\n\n// STATE LOGIC\n\nconst myLibrary = [];\n\nif (localStorage) {\n  const odinLibraryBooks = localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (odinLibraryBooks) {\n    myLibrary.push(...JSON.parse(odinLibraryBooks));\n  }\n}\n\nif (myLibrary.length > 0) {\n  // Re-instantiate books comes from localStorage from 'Book' class\n  myLibrary.splice(\n    0,\n    myLibrary.length,\n    ...myLibrary.map((book) => {\n      return new Book(book.title, book.author, book.numOfPages, book.readState);\n    })\n  );\n} else {\n  // Fill the library with some dummy books if not filled\n  myLibrary.push(\n    new Book(\"Murder On The Orient Express\", \"Agatha Christie\", \"256\")\n  );\n  myLibrary.push(new Book(\"Death on the Nile\", \"Agatha Christie\", \"288\", true));\n}\n\n// MAIN LOGIC\n\n// Add header\ndocument.body.appendChild(\n  document\n    .createElement(\"h1\")\n    .appendChild(document.createTextNode(\"Odin Library\")).parentElement\n);\n// Add new-book form' to the DOM\nif (!window.HTMLDialogElement) {\n  addNewBookFormToDOM(document.body, myLibrary); // Only if no modal support\n} else {\n  // If modal support create new-book button and modal, then add form to modal\n  addNewBookDialogToDOM(myLibrary);\n}\n// Create and add books container\nconst booksContainer = document.createElement(\"div\");\nbooksContainer.className = \"books-container\";\ndocument.body.appendChild(booksContainer);\n// Add book to the DOM\nfor (let i = myLibrary.length - 1; i >= 0; i--) {\n  addBookToDOM(myLibrary[i], booksContainer, myLibrary);\n}\n"],"names":["Book","constructor","title","author","numOfPages","readState","_Book$booksCount","this","id","String","_classStaticPrivateFieldSpecSet","_booksCount","Boolean","setReadState","writable","value","setAttributes","element","attrs","setAttribute","Array","isArray","i","length","createLabelAndInput","labelText","labelAttrs","inputAttrs","labelElement","document","createElement","appendChild","createTextNode","inputElement","createSpan","spanText","className","newSpan","createBookCardBodyEntry","entryTitle","entryData","bookCardEntry","readStateToggler","togglerBtn","togglerText","fromTogglerClass","toTogglerClass","readStateElement","readStateElementText","fromReadStateTextClass","toReadStateTextClass","textContent","classList","replace","createButton","type","button","storeOnLocalStorage","key","data","localStorage","JSONDataStr","JSON","stringify","setItem","LOCAL_STORAGE_KEY","addBookToDOM","book","booksContainer","libraryArr","bookCard","bookTitle","parentElement","bookCardBody","readStateDiv","lastChild","add","bookCardButtons","bookReadStateBtn","addEventListener","event","bookId","target","querySelector","bookDeleteBtn","splice","removeChild","error","console","log","message","append","insertBefore","firstChild","addNewBookFormToDOM","parentNode","newBookForm","titleLabel","titleInput","window","HTMLDialogElement","autofocus","authorLabel","authorInput","pagesNumLabel","pagesNumInput","validity","patternMismatch","setCustomValidity","checkValidity","customError","readStateLabel","readStateInput","submitBtn","preventDefault","formElements","elements","newBook","checked","unshift","close","myLibrary","odinLibraryBooks","getItem","push","parse","map","body","newBookBtn","showModal","formDialog","closeBtn","addNewBookDialogToDOM"],"sourceRoot":""}