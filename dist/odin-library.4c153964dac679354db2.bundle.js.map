{"version":3,"file":"odin-library.4c153964dac679354db2.bundle.js","mappings":"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","sources":["webpack://top-javascript-study/./odin-library/app/book.js","webpack://top-javascript-study/./odin-library/app/helper-functions.js","webpack://top-javascript-study/./odin-library/app/main-functions.js","webpack://top-javascript-study/./odin-library/index.js"],"sourcesContent":["// Book constructor for Odin Library\nexport default class Book {\n  static #booksCount = 0;\n\n  constructor(title, author, numOfPages, readState) {\n    this.id = String(++Book.#booksCount);\n    this.title = title;\n    this.author = author;\n    this.numOfPages = numOfPages;\n    this.readState = Boolean(readState);\n  }\n\n  /**\n   * A setter for readState property\n   *\n   * @param {boolean} readState\n   *\n   * @returns {void}\n   */\n  setReadState(readState) {\n    if (typeof readState === 'boolean') {\n      this.readState = readState;\n    }\n  }\n}\n","// HELPER FUNCTIONS FOR ODIN LIBRARY\n\n/**\n * Sets multiple attributes on element (mutate the element) at once.\n * @param {HTMLElement} element - HTML Element to set attributes on.\n * @param {[string, string][]} attrs - Attributes with its values as a list of string pairs.\n * @returns {void}\n */\nfunction setAttributes(element, attrs) {\n  if (element && element.setAttribute) {\n    if (attrs && Array.isArray(attrs)) {\n      for (let i = 0; i < attrs.length; i++) {\n        if (Array.isArray(attrs) && attrs[i].length === 2) {\n          element.setAttribute(attrs[i][0], attrs[i][1]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Creates input with its label.\n * @param {string} [labelText] - Text for the label.\n * @param {[string, string][]} [labelAttrs] - Attributes for label as list of string pairs.\n * @param {[string, string][]} [inputAttrs] - Attributes for input as list of string pairs.\n * @returns {[HTMLLabelElement, HTMLInputElement]}\n */\nfunction createLabelAndInput(labelText, labelAttrs, inputAttrs) {\n  const labelElement = document.createElement('label');\n  if (labelText && typeof labelText === 'string') {\n    labelElement.appendChild(document.createTextNode(labelText));\n  }\n  setAttributes(labelElement, labelAttrs);\n  const inputElement = document.createElement('input');\n  setAttributes(inputElement, inputAttrs);\n  return [labelElement, inputElement];\n}\n\n/**\n * Creates a span with its textContent & its className.\n * @param {string} spanText\n * @param {string} className\n * @returns {HTMLSpanElement}\n */\nfunction createSpan(spanText, className) {\n  const newSpan = document.createElement('span');\n  newSpan.className = className ?? '';\n  newSpan.appendChild(document.createTextNode(spanText ?? ''));\n  return newSpan;\n}\n\n/**\n * Creates an entry for book-card's body.\n * @param {string} entryTitle\n * @param {string} entryData\n * @returns {HTMLDivElement}\n */\nfunction createBookCardBodyEntry(entryTitle, entryData) {\n  const bookCardEntry = document.createElement('div');\n  bookCardEntry.className = 'book-card-entry';\n  bookCardEntry.appendChild(\n    createSpan(entryTitle + ': ', 'book-card-entry-title'),\n  );\n  bookCardEntry.appendChild(createSpan(entryData, 'book-card-entry-data'));\n  return bookCardEntry;\n}\n\n/**\n * Toggles book's read state.\n * @param {HTMLButtonElement} togglerBtn\n * @param {string} togglerText\n * @param {string} fromTogglerClass\n * @param {string} toTogglerClass\n * @param {HTMLSpanElement} readStateElement\n * @param {string} readStateElementText\n * @param {string} fromReadStateTextClass\n * @param {string} toReadStateTextClass\n * @returns {void}\n */\nfunction readStateToggler(\n  togglerBtn,\n  togglerText,\n  fromTogglerClass,\n  toTogglerClass,\n  readStateElement,\n  readStateElementText,\n  fromReadStateTextClass,\n  toReadStateTextClass,\n) {\n  togglerBtn.textContent = togglerText;\n  togglerBtn.classList.replace(fromTogglerClass, toTogglerClass);\n  togglerBtn.classList.replace(toReadStateTextClass, fromReadStateTextClass);\n  readStateElement.textContent = readStateElementText;\n  readStateElement.classList.replace(\n    fromReadStateTextClass,\n    toReadStateTextClass,\n  );\n}\n\n/**\n * Creates a button with its textContent & type, class, id and value attributes.\n * @param {string} textContent\n * @param {string} type\n * @param {string} className - String of spaces-separated class list.\n * @param {string} id\n * @param {string} value\n * @returns {HTMLButtonElement}\n */\nfunction createButton(textContent, type, className, id, value) {\n  const button = document.createElement('button');\n  button.appendChild(document.createTextNode(textContent));\n  button.setAttribute('type', type);\n  button.className = className ?? '';\n  button.id = id ?? '';\n  button.value = value ?? '';\n  return button;\n}\n\n/**\n * Stores the library's array on the locale Storage.\n * @param {string} key\n * @param {Book[]} data - The library.\n */\nfunction storeOnLocalStorage(key, data) {\n  if (localStorage) {\n    const JSONDataStr = JSON.stringify(data);\n    if (JSONDataStr.length < 3 * 1024 * 1024) {\n      localStorage.setItem(key, JSONDataStr);\n    }\n  }\n}\n\nexport {\n  createBookCardBodyEntry,\n  createLabelAndInput,\n  createButton,\n  setAttributes,\n  readStateToggler,\n  storeOnLocalStorage,\n};\n","import Book from './book.js';\nimport {\n  createBookCardBodyEntry,\n  createLabelAndInput,\n  createButton,\n  setAttributes,\n  readStateToggler,\n  storeOnLocalStorage,\n} from './helper-functions.js';\n\n// MAIN FUNCTIONS FOR ODIN LIBRARY\n\nconst LOCAL_STORAGE_KEY = 'odin-library-books';\n\n/**\n * Adds book card to the given books' container using the given book's data.\n * @param {Book} book\n * @param {HTMLDivElement} booksContainer\n * @returns {void}\n */\nfunction addBookToDOM(book, booksContainer, libraryArr) {\n  // Book card\n  const bookCard = document.createElement('div');\n  bookCard.className = 'book-card';\n  // Book card title\n  const bookTitle = document\n    .createElement('div')\n    .appendChild(document.createTextNode(book.title)).parentElement;\n  bookTitle.className = 'book-card-title';\n  // Book card body\n  const bookCardBody = document.createElement('div');\n  bookCardBody.className = 'book-card-body';\n  bookCardBody.appendChild(createBookCardBodyEntry('Author', book.author));\n  bookCardBody.appendChild(\n    createBookCardBodyEntry('Number of Pages', book.numOfPages),\n  );\n  const readStateDiv = createBookCardBodyEntry(\n    'Read',\n    book.readState ? 'Yes' : 'No',\n  );\n  readStateDiv.id = 'read-state-' + book.id;\n  readStateDiv.lastChild.classList.add(\n    book.readState ? 'success-text' : 'danger-text',\n  );\n  bookCardBody.appendChild(readStateDiv);\n  // Book card buttons\n  const bookCardButtons = document.createElement('div');\n  bookCardButtons.className = 'book-card-buttons';\n  const bookReadStateBtn = createButton(\n    'Mark as ' + (book.readState ? 'not read' : 'read'),\n    'button',\n    book.readState\n      ? 'danger-border danger-text'\n      : 'success-border success-text',\n    'read-state-toggler-' + book.id,\n    book.id,\n  );\n  bookReadStateBtn.addEventListener('click', (event) => {\n    const bookId = event.target.value;\n    for (let i = 0; i < libraryArr.length; i++) {\n      if (libraryArr[i].id === bookId) {\n        libraryArr[i].setReadState(!libraryArr[i].readState);\n        if (libraryArr[i].readState) {\n          readStateToggler(\n            event.target,\n            'Mark as not read',\n            'success-border',\n            'danger-border',\n            document.querySelector('#read-state-' + bookId).lastChild,\n            'Yes',\n            'danger-text',\n            'success-text',\n          );\n        } else {\n          readStateToggler(\n            event.target,\n            'Mark as read',\n            'danger-border',\n            'success-border',\n            document.querySelector('#read-state-' + bookId).lastChild,\n            'No',\n            'success-text',\n            'danger-text',\n          );\n        }\n        break;\n      }\n    }\n    storeOnLocalStorage(LOCAL_STORAGE_KEY, libraryArr);\n  });\n  const bookDeleteBtn = createButton(\n    'Delete',\n    'button',\n    'danger-text danger-border',\n    'book-card-del-btn-' + book.id,\n    book.id,\n  );\n  bookDeleteBtn.addEventListener('click', (event) => {\n    for (let i = 0; i < libraryArr.length; i++) {\n      if (libraryArr[i].id === event.target.value) {\n        libraryArr.splice(i, 1);\n        try {\n          document\n            .querySelector('.books-container')\n            ?.removeChild(event.target.parentElement.parentElement);\n        } catch (error) {\n          console.log(error.message);\n        }\n        break;\n      }\n    }\n    storeOnLocalStorage(LOCAL_STORAGE_KEY, libraryArr);\n  });\n  bookCardButtons.append(bookReadStateBtn, bookDeleteBtn);\n  bookCard.append(bookTitle, bookCardBody, bookCardButtons);\n  booksContainer.insertBefore(bookCard, booksContainer.firstChild);\n}\n\n/**\n * Adds a 'form' element for adding new book in the given parent node.\n * @param {Node} parentNode - Paren node to append the form to it.\n * @returns {void}\n */\nfunction addNewBookFormToDOM(parentNode, libraryArr) {\n  // Create the form\n  const newBookForm = document.createElement('form');\n  newBookForm.className = 'new-book-form';\n  const [titleLabel, titleInput] = createLabelAndInput(\n    'Title: ',\n    [['for', 'title']],\n    [\n      ['type', 'text'],\n      ['id', 'title'],\n      ['name', 'title'],\n      ['autocomplete', 'on'],\n      ['required', ''],\n    ],\n  );\n  if (window.HTMLDialogElement) titleInput.autofocus = true;\n  newBookForm.appendChild(\n    document\n      .createElement('div')\n      .appendChild(titleLabel)\n      .parentElement.appendChild(titleInput).parentElement,\n  );\n  const [authorLabel, authorInput] = createLabelAndInput(\n    'Author: ',\n    [['for', 'author']],\n    [\n      ['type', 'text'],\n      ['id', 'author'],\n      ['name', 'author'],\n      ['autocomplete', 'on'],\n      ['required', ''],\n    ],\n  );\n  newBookForm.appendChild(\n    document\n      .createElement('div')\n      .appendChild(authorLabel)\n      .parentElement.appendChild(authorInput).parentElement,\n  );\n  const [pagesNumLabel, pagesNumInput] = createLabelAndInput(\n    'Number of Pages: ',\n    [['for', 'pages-number']],\n    [\n      ['type', 'tel'],\n      ['id', 'pages-number'],\n      ['name', 'pages-number'],\n      ['pattern', '^[0-9]{1,7}$'],\n      ['autocomplete', 'on'],\n      ['required', ''],\n    ],\n  );\n  // Number validation\n  pagesNumInput.addEventListener('invalid', (event) => {\n    if (event.target.validity.patternMismatch) {\n      event.target.setCustomValidity('Numbers only are allowed here.');\n    } else {\n      event.target.setCustomValidity('');\n    }\n  });\n  pagesNumInput.addEventListener('input', (event) => {\n    if (event.target.checkValidity() && event.target.validity.customError) {\n      event.target.setCustomValidity('');\n    }\n  });\n  newBookForm.appendChild(\n    document\n      .createElement('div')\n      .appendChild(pagesNumLabel)\n      .parentElement.appendChild(pagesNumInput).parentElement,\n  );\n  const [readStateLabel, readStateInput] = createLabelAndInput(\n    ' Did you read this book?',\n    [['for', 'read-state']],\n    [\n      ['type', 'checkbox'],\n      ['id', 'read-state'],\n      ['name', 'read-state'],\n    ],\n  );\n  newBookForm.appendChild(\n    document\n      .createElement('div')\n      .appendChild(readStateInput)\n      .parentElement.appendChild(readStateLabel).parentElement,\n  );\n  const submitBtn = createButton('Add New Book', 'submit', 'success-color');\n  newBookForm.appendChild(\n    document.createElement('div').appendChild(submitBtn).parentElement,\n  );\n  // Add the form to DOM\n  parentNode.appendChild(newBookForm);\n  // Handle form submission\n  newBookForm.addEventListener('submit', (event) => {\n    event.preventDefault();\n    const formElements = event.target.elements;\n    const newBook = new Book(\n      formElements['title'].value,\n      formElements['author'].value,\n      formElements['pages-number'].value,\n      formElements['read-state'].checked,\n    );\n    libraryArr.unshift(newBook);\n    storeOnLocalStorage(LOCAL_STORAGE_KEY, libraryArr);\n    addBookToDOM(\n      newBook,\n      document.querySelector('.books-container'),\n      libraryArr,\n    );\n    for (let i = 0; i < formElements.length; i++) {\n      formElements[i].value = '';\n      if (formElements[i].type === 'checkbox') formElements[i].checked = false;\n    }\n    if (event.target.parentElement instanceof HTMLDialogElement) {\n      event.target.parentElement.close(); // Close the dialog if any\n    }\n  });\n}\n\n/**\n * Adds, to 'body' element, a new 'dialog' with a 'form' for adding a new book.\n * @returns {void}\n */\nfunction addNewBookDialogToDOM(libraryArr) {\n  // Button to show the dialog\n  const newBookBtn = createButton('+', 'button', 'new-book-dialog-show-btn');\n  newBookBtn.addEventListener('click', () => {\n    document.querySelector('dialog').showModal();\n  });\n  setAttributes(newBookBtn, [\n    ['aria-label', 'Add new book'],\n    ['title', 'Add new book'],\n  ]); // For better accessibility\n  document.body.appendChild(\n    document.createElement('div').appendChild(newBookBtn).parentElement,\n  );\n  // New book dialog\n  const formDialog = document.createElement('dialog');\n  const closeBtn = createButton('x', 'button', 'new-book-dialog-close-btn');\n  setAttributes(closeBtn, [\n    ['aria-label', 'Close'],\n    ['title', 'Close'],\n  ]); // For better accessibility\n  formDialog.appendChild(\n    document.createElement('div').appendChild(closeBtn).parentElement,\n  );\n  closeBtn.addEventListener('click', () =>\n    document.querySelector('dialog').close(),\n  );\n  addNewBookFormToDOM(formDialog, libraryArr); // Add new-book form to the dialog\n  document.body.appendChild(formDialog);\n}\n\nexport {\n  LOCAL_STORAGE_KEY,\n  addBookToDOM,\n  addNewBookFormToDOM,\n  addNewBookDialogToDOM,\n};\n","import Book from './app/book.js';\nimport {\n  LOCAL_STORAGE_KEY,\n  addBookToDOM,\n  addNewBookFormToDOM,\n  addNewBookDialogToDOM,\n} from './app/main-functions.js';\nimport './styles/main.css'; // CSS Styles\n\n// STATE LOGIC\n\nconst myLibrary = [];\n\nif (localStorage) {\n  const odinLibraryBooks = localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (odinLibraryBooks) {\n    myLibrary.push(...JSON.parse(odinLibraryBooks));\n  }\n}\n\nif (myLibrary.length > 0) {\n  // Re-instantiate books comes from localStorage from 'Book' class\n  myLibrary.splice(\n    0,\n    myLibrary.length,\n    ...myLibrary.map((book) => {\n      return new Book(book.title, book.author, book.numOfPages, book.readState);\n    }),\n  );\n} else {\n  // Fill the library with some dummy books if not filled\n  myLibrary.push(\n    new Book('Murder On The Orient Express', 'Agatha Christie', '256'),\n  );\n  myLibrary.push(new Book('Death on the Nile', 'Agatha Christie', '288', true));\n}\n\n// MAIN LOGIC\n\n// Add header\ndocument.body.appendChild(\n  document\n    .createElement('h1')\n    .appendChild(document.createTextNode('Odin Library')).parentElement,\n);\n// Add new-book form' to the DOM\nif (!window.HTMLDialogElement) {\n  addNewBookFormToDOM(document.body, myLibrary); // Only if no modal support\n} else {\n  // If modal support create new-book button and modal, then add form to modal\n  addNewBookDialogToDOM(myLibrary);\n}\n// Create and add books container\nconst booksContainer = document.createElement('div');\nbooksContainer.className = 'books-container';\ndocument.body.appendChild(booksContainer);\n// Add book to the DOM\nfor (let i = myLibrary.length - 1; i >= 0; i--) {\n  addBookToDOM(myLibrary[i], booksContainer, myLibrary);\n}\n"],"names":["Book","title","author","numOfPages","readState","_Book$booksCount","_classCallCheck","this","id","String","_classStaticPrivateFieldSpecSet","_booksCount","Boolean","key","value","writable","setAttributes","element","attrs","setAttribute","Array","isArray","i","length","createLabelAndInput","labelText","labelAttrs","inputAttrs","labelElement","document","createElement","appendChild","createTextNode","inputElement","createSpan","spanText","className","newSpan","createBookCardBodyEntry","entryTitle","entryData","bookCardEntry","readStateToggler","togglerBtn","togglerText","fromTogglerClass","toTogglerClass","readStateElement","readStateElementText","fromReadStateTextClass","toReadStateTextClass","textContent","classList","replace","createButton","type","button","storeOnLocalStorage","data","localStorage","JSONDataStr","JSON","stringify","setItem","LOCAL_STORAGE_KEY","addBookToDOM","book","booksContainer","libraryArr","bookCard","bookTitle","parentElement","bookCardBody","readStateDiv","lastChild","add","bookCardButtons","bookReadStateBtn","addEventListener","event","bookId","target","setReadState","querySelector","bookDeleteBtn","splice","_document$querySelect","removeChild","error","console","log","message","append","insertBefore","firstChild","addNewBookFormToDOM","parentNode","newBookForm","_createLabelAndInput2","_slicedToArray","titleLabel","titleInput","window","HTMLDialogElement","autofocus","_createLabelAndInput4","authorLabel","authorInput","_createLabelAndInput6","pagesNumLabel","pagesNumInput","validity","patternMismatch","setCustomValidity","checkValidity","customError","_createLabelAndInput8","readStateLabel","readStateInput","submitBtn","preventDefault","formElements","elements","newBook","checked","unshift","close","myLibrary","odinLibraryBooks","getItem","push","apply","_toConsumableArray","parse","concat","map","body","newBookBtn","showModal","formDialog","closeBtn","addNewBookDialogToDOM"],"sourceRoot":""}